





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-pWLt6abkYhNeAHaDrPVG0yXCtIGRuCkwSUqQpsyN6smAIpIt+Iuq2IZKmoH9l3Cy/9ZnjvVrFZnvFFjGiqE3EA==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-a3b8a10d4a9e37a78f033ef4a4f525f5.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-e9IVlZps8GIlPBb9Q676KhZ7Skt1vRTpHtBKEc+1CeDjupCJ9JT7Nh6tlNa1OhIw0L34I73FIqXsxdXWT8ZZ8w==" rel="stylesheet" href="https://github.githubassets.com/assets/github-e734c34094fda7afab14de5bc9f86d7d.css" />
  
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>three.js/draco_wasm_wrapper.js at master · mrdoob/three.js</title>
    <meta name="description" content="JavaScript 3D library. Contribute to mrdoob/three.js development by creating an account on GitHub.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/97088?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="mrdoob/three.js" /><meta property="og:url" content="https://github.com/mrdoob/three.js" /><meta property="og:description" content="JavaScript 3D library. Contribute to mrdoob/three.js development by creating an account on GitHub." />

  <link rel="assets" href="https://github.githubassets.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MzY1OTgyNzY0OmIyNTVmNTY1ZjQzMjA1OTRjMTc3YmE4MGIyYmJmZTljYzMxN2I5NmUwNGI2NjY4NGRmYjk3MDQyMGZiMTczOTM=--09e728a10e628d509817f051aad020c6ed96c5ef">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="ED40:34DC2:8D51F7:D66382:5C49D635" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

  <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="ED40:34DC2:8D51F7:D66382:5C49D635" /><meta name="octolytics-dimension-region_edge" content="ams" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-actor-id" content="20284034" /><meta name="octolytics-actor-login" content="vsigno" /><meta name="octolytics-actor-hash" content="e07d6375411df02d3c1fc5602e345c778589bf7bd0fdfa974d91e10e0f1565ed" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-2">

  <meta class="js-ga-set" name="userId" content="85dfb9c54723d465224ee6645450f855" %>

<meta class="js-ga-set" name="dimension1" content="Logged In">



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="vsigno">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="ODBhYzY0NDU3MjU2YmM1Yzc4ZjQ5YTJlZmJkNGE0YWZkNDJlODU4NWI1ZjJiNzI1ZjlmNmFlNzU0YjdhNTExOHx7InJlbW90ZV9hZGRyZXNzIjoiMTI4LjQwLjQ3LjEwNCIsInJlcXVlc3RfaWQiOiJFRDQwOjM0REMyOjhENTFGNzpENjYzODI6NUM0OUQ2MzUiLCJ0aW1lc3RhbXAiOjE1NDgzNDI4NDEsImhvc3QiOiJnaXRodWIuY29tIn0=">

    <meta name="enabled-features" content="DASHBOARD_V2_LAYOUT,UNIVERSE_BANNER,MARKETPLACE_PLAN_RESTRICTION_EDITOR,NOTIFY_ON_BLOCK,RELATED_ISSUES,MARKETPLACE_INSIGHTS_V2">

  <meta name="html-safe-nonce" content="a9707d3ae4acf1fc4b5367b8e41994ba1839363b">

  <meta http-equiv="x-pjax-version" content="9eb55b61da8052fa379b27a637444e85">
  

      <link href="https://github.com/mrdoob/three.js/commits/master.atom" rel="alternate" title="Recent Commits to three.js:master" type="application/atom+xml">

  <meta name="go-import" content="github.com/mrdoob/three.js git https://github.com/mrdoob/three.js.git">

  <meta name="octolytics-dimension-user_id" content="97088" /><meta name="octolytics-dimension-user_login" content="mrdoob" /><meta name="octolytics-dimension-repository_id" content="576201" /><meta name="octolytics-dimension-repository_nwo" content="mrdoob/three.js" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="576201" /><meta name="octolytics-dimension-repository_network_root_nwo" content="mrdoob/three.js" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/mrdoob/three.js/blob/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="p-3 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    


        
<header class="Header  f5" role="banner">
  <div class="d-flex flex-justify-between px-3 ">
    <div class="d-flex flex-justify-between ">
      <div class="">
        <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg height="32" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>

      </div>

    </div>

    <div class="HeaderMenu d-flex flex-justify-between flex-auto">
      <nav class="d-flex" aria-label="Global">
            <div class="">
              <div class="header-search scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="false"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" data-scope-type="Repository" data-scope-id="576201" data-scoped-search-url="/mrdoob/three.js/search" data-unscoped-search-url="/search" action="/mrdoob/three.js/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control header-search-wrapper header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search or jump to…"
          data-unscoped-placeholder="Search or jump to…"
          data-scoped-placeholder="Search or jump to…"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search or jump to…"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=EMYHJF8I11lTAZxscCi/ys/kP7BuU8+EN9uVYnrhR7HDd1Nz4GV/gTUq2oybfklLEG7JIdAILRIkMX6V4RP2Kg=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://github.githubassets.com/images/search-key-slash.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="text-gray">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


    <li class="d-flex flex-justify-center flex-items-center p-0 f5 js-jump-to-suggestion">
      <img src="https://github.githubassets.com/images/spinners/octocat-spinner-128.gif" alt="Octocat Spinner Icon" class="m-2" width="28">
    </li>
</ul>

            </div>
      </label>
</form>  </div>
</div>

            </div>

          <ul class="d-flex pl-2 flex-items-center text-bold list-style-none">
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
                Pull requests
</a>            </li>
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">
                Issues
</a>            </li>
              <li class="position-relative">
                <a class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-octo-click="marketplace_click" data-octo-dimensions="location:nav_bar" data-selected-links=" /marketplace" href="/marketplace">
                   Marketplace
</a>                  
              </li>
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
                Explore
</a>            </li>
          </ul>
      </nav>

      <div class="d-flex">
        
<ul class="user-nav d-flex flex-items-center list-style-none" id="user-links">
  <li class="dropdown">
    <span class="d-inline-block  px-2">
      
    <a aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s  js-socket-channel js-notification-indicator" data-hotkey="g n" data-ga-click="Header, go to notifications, icon:read" data-channel="notification-changed:20284034" href="/notifications">
        <span class="mail-status "></span>
        <svg class="octicon octicon-bell" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
    </span>
  </li>

  <li class="dropdown">
    <details class="details-overlay details-reset d-flex px-2 flex-items-center">
      <summary class="HeaderNavlink"
         aria-label="Create new…"
         data-ga-click="Header, create new, icon:add">
        <svg class="octicon octicon-plus float-left mr-1 mt-1" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5v2z"/></svg>
        <span class="dropdown-caret mt-1"></span>
      </summary>
      <details-menu class="dropdown-menu dropdown-menu-sw">
        
<a role="menuitem" class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a role="menuitem" class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a role="menuitem" class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a role="menuitem" class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>


  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="mrdoob/three.js">This repository</span>
  </div>
    <a role="menuitem" class="dropdown-item" href="/mrdoob/three.js/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>


      </details-menu>
    </details>
  </li>

  <li class="dropdown">

    <details class="details-overlay details-reset d-flex pl-2 flex-items-center">
      <summary class="HeaderNavlink name mt-1"
        aria-label="View profile and more"
        data-ga-click="Header, show menu, icon:avatar">
        <img alt="@vsigno" class="avatar float-left mr-1" src="https://avatars0.githubusercontent.com/u/20284034?s=40&amp;v=4" height="20" width="20">
        <span class="dropdown-caret"></span>
      </summary>
      <details-menu class="dropdown-menu dropdown-menu-sw">
        <div class="header-nav-current-user css-truncate"><a role="menuitem" class="no-underline user-profile-link px-3 pt-2 pb-2 mb-n2 mt-n1 d-block" href="/vsigno" data-ga-click="Header, go to profile, text:Signed in as">Signed in as <strong class="css-truncate-target">vsigno</strong></a></div>
        <div role="none" class="dropdown-divider"></div>

        <div class="px-3 f6 user-status-container js-user-status-context pb-1" data-url="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1">
          
<div class="js-user-status-container user-status-compact" data-team-hovercards-enabled>
  <details class="js-user-status-details details-reset details-overlay details-overlay-dark">
    <summary class="btn-link no-underline js-toggle-user-status-edit toggle-user-status-edit width-full" aria-haspopup="dialog" role="menuitem">
      <div class="f6 d-inline-block v-align-middle  user-status-emoji-only-header pl-0 circle lh-condensed user-status-header " style="max-width: 29px">
        <div class="user-status-emoji-container flex-shrink-0 mr-1">
          <svg class="octicon octicon-smiley" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.81 12.81a6.72 6.72 0 0 1-2.17 1.45c-.83.36-1.72.53-2.64.53-.92 0-1.81-.17-2.64-.53-.81-.34-1.55-.83-2.17-1.45a6.773 6.773 0 0 1-1.45-2.17A6.59 6.59 0 0 1 1.21 8c0-.92.17-1.81.53-2.64.34-.81.83-1.55 1.45-2.17.62-.62 1.36-1.11 2.17-1.45A6.59 6.59 0 0 1 8 1.21c.92 0 1.81.17 2.64.53.81.34 1.55.83 2.17 1.45.62.62 1.11 1.36 1.45 2.17.36.83.53 1.72.53 2.64 0 .92-.17 1.81-.53 2.64-.34.81-.83 1.55-1.45 2.17zM4 6.8v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2H5.2C4.53 8 4 7.47 4 6.8zm5 0v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2h-.59C9.53 8 9 7.47 9 6.8zm4 3.2c-.72 1.88-2.91 3-5 3s-4.28-1.13-5-3c-.14-.39.23-1 .66-1h8.59c.41 0 .89.61.75 1z"/></svg>
        </div>
      </div>
      <div class="d-inline-block v-align-middle user-status-message-wrapper f6 lh-condensed ws-normal pt-1">
          <span class="link-gray">Set your status</span>
      </div>
    </summary>
    <details-dialog class="anim-fade-in fast Box Box--overlay" role="dialog" tabindex="-1">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="position-relative flex-auto js-user-status-form" action="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1" accept-charset="UTF-8" data-remote="true" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="hW1TxMXvb+EHDkIT94uLiThNhvRSK13FOtTzG9BvKEet7cfe5ZFnVMzvjUZqNPMkrMRWnvA/igi1KtVetcW54w==" />
        <div class="Box-header">
          <button class="Box-btn-octicon js-toggle-user-status-edit btn-octicon float-right" type="reset" aria-label="Close dialog" data-close-dialog>
            <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
          </button>
          <h3 class="Box-title text-gray-dark">Edit status</h3>
        </div>
        <input type="hidden" name="emoji" class="js-user-status-emoji-field" value="">
        <input type="hidden" name="organization_id" class="js-user-status-org-id-field" value="">
        <div class="px-3 py-2 text-gray-dark">
          <div class="js-characters-remaining-container js-suggester-container position-relative mt-2">
            <div class="input-group">
              <span class="input-group-button">
                <button type="button" aria-label="Choose an emoji" class="btn-outline btn js-toggle-user-status-emoji-picker">
                  <span class="js-user-status-original-emoji" hidden></span>
                  <span class="js-user-status-custom-emoji"></span>
                  <span class="js-user-status-no-emoji-icon" >
                    <svg class="octicon octicon-smiley" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.81 12.81a6.72 6.72 0 0 1-2.17 1.45c-.83.36-1.72.53-2.64.53-.92 0-1.81-.17-2.64-.53-.81-.34-1.55-.83-2.17-1.45a6.773 6.773 0 0 1-1.45-2.17A6.59 6.59 0 0 1 1.21 8c0-.92.17-1.81.53-2.64.34-.81.83-1.55 1.45-2.17.62-.62 1.36-1.11 2.17-1.45A6.59 6.59 0 0 1 8 1.21c.92 0 1.81.17 2.64.53.81.34 1.55.83 2.17 1.45.62.62 1.11 1.36 1.45 2.17.36.83.53 1.72.53 2.64 0 .92-.17 1.81-.53 2.64-.34.81-.83 1.55-1.45 2.17zM4 6.8v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2H5.2C4.53 8 4 7.47 4 6.8zm5 0v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2h-.59C9.53 8 9 7.47 9 6.8zm4 3.2c-.72 1.88-2.91 3-5 3s-4.28-1.13-5-3c-.14-.39.23-1 .66-1h8.59c.41 0 .89.61.75 1z"/></svg>
                  </span>
                </button>
              </span>
              <input type="text" autocomplete="off" autofocus data-maxlength="80" class="js-suggester-field form-control js-user-status-message-field js-characters-remaining-field" placeholder="What's happening?" name="message" required value="" aria-label="What is your current status?">
            </div>
            <div class="suggester-container">
              <div class="suggester js-suggester js-navigation-container" data-url="/autocomplete/user-suggestions" data-no-org-url="/autocomplete/user-suggestions" data-org-url="/suggestions" hidden>
              </div>
            </div>
            <div style="margin-left: 53px" class="my-1 text-small label-characters-remaining js-characters-remaining" data-suffix="remaining" hidden>
              80 remaining
            </div>
          </div>
          <include-fragment class="js-user-status-emoji-picker" data-url="/users/status/emoji"></include-fragment>
          <div class="overflow-auto" style="max-height: 33vh">
            <div class="user-status-suggestions js-user-status-suggestions">
              <h4 class="f6 text-normal my-3">Suggestions:</h4>
              <div class="mx-3 mt-2 clearfix">
                  <div class="float-left col-6">
                      <button type="button" value=":palm_tree:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="palm_tree" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f334.png">🌴</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message" style="border-left: 1px solid transparent">
                          On vacation
                        </div>
                      </button>
                      <button type="button" value=":face_with_thermometer:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="face_with_thermometer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f912.png">🤒</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message" style="border-left: 1px solid transparent">
                          Out sick
                        </div>
                      </button>
                  </div>
                  <div class="float-left col-6">
                      <button type="button" value=":house:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="house" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3e0.png">🏠</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message" style="border-left: 1px solid transparent">
                          Working from home
                        </div>
                      </button>
                      <button type="button" value=":dart:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png">🎯</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message" style="border-left: 1px solid transparent">
                          Focusing
                        </div>
                      </button>
                  </div>
              </div>
            </div>
            <div class="user-status-limited-availability-container">
              <div class="form-checkbox my-0">
                <input type="checkbox" name="limited_availability" value="1" class="js-user-status-limited-availability-checkbox" data-default-message="I may be slow to respond." aria-describedby="limited-availability-help-text-truncate-true" id="limited-availability-truncate-true">
                <label class="d-block f5 text-gray-dark mb-1" for="limited-availability-truncate-true">
                  Busy
                </label>
                <p class="note" id="limited-availability-help-text-truncate-true">
                  When others mention you, assign you, or request your review,
                  GitHub will let them know that you have limited availability.
                </p>
              </div>
            </div>
          </div>
          <include-fragment class="js-user-status-org-picker" data-url="/users/status/organizations"></include-fragment>
        </div>
        <div class="d-flex flex-items-center flex-justify-between p-3 border-top">
          <button type="submit" disabled class="width-full btn btn-primary mr-2 js-user-status-submit">
            Set status
          </button>
          <button type="button" disabled class="width-full js-clear-user-status-button btn ml-2 ">
            Clear status
          </button>
        </div>
</form>    </details-dialog>
  </details>
</div>

        </div>
        <div role="none" class="dropdown-divider"></div>

        <a role="menuitem" class="dropdown-item" href="/vsigno" data-ga-click="Header, go to profile, text:your profile">Your profile</a>
        <a role="menuitem" class="dropdown-item" href="/vsigno?tab=repositories" data-ga-click="Header, go to repositories, text:your repositories">Your repositories</a>


        <a role="menuitem" class="dropdown-item" href="/vsigno?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">Your stars</a>
          <a role="menuitem" class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, your gists, text:your gists">Your gists</a>

        <div role="none" class="dropdown-divider"></div>
        <a role="menuitem" class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        <a role="menuitem" class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">Settings</a>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="logout-form" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="PJRgXviXgULFe8GilkAp71W+EKJ5joQ4NFZVEou6vnbyfHHeMpzciPxnZ6Xv7DQWgyPgvQK0TcjLqzRuTiBXfQ==" />
          
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout" role="menuitem">
            Sign out
          </button>
</form>      </details-menu>
    </details>
  </li>
</ul>



        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="sr-only right-0" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="iuUu1laMZOguuGojbaLTNfMgMdl+1Lv3OrKIewpERuxEDT9WnIc5IhekzCQUDs7MJb3BxgXucgfFT+kHz96v5w==" />
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </div>
</header>

      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">

</div>



  <div role="main" class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      


  





  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-remote="true" class="js-social-form js-social-container" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="R7G29oFmqit+yBo1oCvJ34/PH6TeThIkhTkJpfnsnZaQQlbTtvJ/gvbW01m5gDh/40E+YdMkZ0D29r6bSU80Pg==" />      <input type="hidden" name="repository_id" id="repository_id" value="576201" class="form-control" />

      <details class="details-reset details-overlay select-menu float-left">
        <summary class="btn btn-sm btn-with-count select-menu-button" data-ga-click="Repository, click Watch settings, action:blob#show">
          <span data-menu-button>
              <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
              Watch
          </span>
        </summary>
        <details-menu class="select-menu-modal position-absolute mt-5" style="z-index: 99;">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
          </div>
          <div class="select-menu-list">
            <button type="submit" name="do" value="included" class="select-menu-item width-full" aria-checked="true" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Not watching</span>
                <span class="description">Be notified only when participating or @mentioned.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Watch
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="release_only" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Releases only</span>
                <span class="description">Be notified of new releases, and when participating or @mentioned.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Unwatch releases
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="subscribed" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Watching</span>
                <span class="description">Be notified of all conversations.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Unwatch
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="ignore" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Ignoring</span>
                <span class="description">Never be notified.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-mute v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                  Stop ignoring
                </span>
              </div>
            </button>
          </div>
        </details-menu>
      </details>
      <a class="social-count js-social-count"
        href="/mrdoob/three.js/watchers"
        aria-label="2434 users are watching this repository">
        2,434
      </a>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="starred js-social-form" action="/mrdoob/three.js/unstar" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="f5G7sf+tbjCnWHj/BuVv2frL8dvdtwgcA/eJXG7Jtvp6N6Ki6GpAGMV/R4+2/iHww+6Pkt4D+LUx9WYoRylzBA==" />
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar mrdoob/three.js"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/mrdoob/three.js/stargazers"
           aria-label="48263 users starred this repository">
          48,263
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="unstarred js-social-form" action="/mrdoob/three.js/star" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="B8Z5aAvv3hA+W9a8aPZdwOofCeqIHCB49JsmM7XVnRU8IlAC7wVYF8ggKY95yvtK6ekCtDYXRToWY2LVzY/QSA==" />
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star mrdoob/three.js"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/mrdoob/three.js/stargazers"
           aria-label="48263 users starred this repository">
          48,263
        </a>
</form>  </div>

  </li>

  <li>
          <details class="details-reset details-overlay details-overlay-dark d-inline-block float-left"
            data-deferred-details-content-url="/mrdoob/three.js/fork?fragment=1">
            <summary class="btn btn-sm btn-with-count"
              title="Fork your own copy of mrdoob/three.js to your account"
              data-ga-click="Repository, show fork modal, action:blob#show; text:Fork">
              <svg class="octicon octicon-repo-forked v-align-text-bottom" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </summary>
            <details-dialog class="anim-fade-in fast Box Box--overlay d-flex flex-column">
              <div class="Box-header">
                <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
                  <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
                </button>
                <h3 class="Box-title">Fork three.js</h3>
              </div>
              <div class="overflow-auto text-center">
                <include-fragment>
                  <div class="octocat-spinner my-3" aria-label="Loading..."></div>
                  <p class="f5 text-gray">If this dialog fails to load, you can visit <a href="/mrdoob/three.js/fork">the fork page</a> directly.</p>
                </include-fragment>
              </div>
            </details-dialog>
          </details>

    <a href="/mrdoob/three.js/network/members" class="social-count"
       aria-label="18153 users forked this repository">
      18,153
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=97088" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob">mrdoob</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/mrdoob/three.js">three.js</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
    aria-label="Repository"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /mrdoob/three.js/tree/master" href="/mrdoob/three.js/tree/master">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /mrdoob/three.js/issues" href="/mrdoob/three.js/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">585</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /mrdoob/three.js/pulls" href="/mrdoob/three.js/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">222</span>
      <meta itemprop="position" content="3">
</a>  </span>


    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /mrdoob/three.js/projects" href="/mrdoob/three.js/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >1</span>
</a>

    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /mrdoob/three.js/wiki" href="/mrdoob/three.js/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>
    <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse alerts security people /mrdoob/three.js/pulse" href="/mrdoob/three.js/pulse">
      <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
      Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
    



  
    <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/mrdoob/three.js/blob/02b5ba0b53f8f461e85c9877f5a6c0094bc2bbf3/examples/js/libs/draco/gltf/draco_wasm_wrapper.js">Permalink</a>

    <!-- blob contrib key: blob_contributors:v21:4157d7a949eec88713e8244231df5480 -->

    

    <div class="file-navigation">
      
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left js-load-contents"
  data-contents-url="/mrdoob/three.js/ref-list/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js?source_action=show&amp;source_controller=blob">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>
    <div class="select-menu-modal">
      <div class="js-select-menu-deferred-content"></div>
      <div class="select-menu-loading-overlay anim-pulse">
        <svg height="32" class="octicon octicon-octoface" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M14.7 5.34c.13-.32.55-1.59-.13-3.31 0 0-1.05-.33-3.44 1.3-1-.28-2.07-.32-3.13-.32s-2.13.04-3.13.32c-2.39-1.64-3.44-1.3-3.44-1.3-.68 1.72-.26 2.99-.13 3.31C.49 6.21 0 7.33 0 8.69 0 13.84 3.33 15 7.98 15S16 13.84 16 8.69c0-1.36-.49-2.48-1.3-3.35zM8 14.02c-3.3 0-5.98-.15-5.98-3.35 0-.76.38-1.48 1.02-2.07 1.07-.98 2.9-.46 4.96-.46 2.07 0 3.88-.52 4.96.46.65.59 1.02 1.3 1.02 2.07 0 3.19-2.68 3.35-5.98 3.35zM5.49 9.01c-.66 0-1.2.8-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.54-1.78-1.2-1.78zm5.02 0c-.66 0-1.2.79-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.53-1.78-1.2-1.78z"/></svg>
      </div>
    </div>
  </div>
</div>

      <div class="BtnGroup float-right">
        <a href="/mrdoob/three.js/find/master"
              class="js-pjax-capture-input btn btn-sm BtnGroup-item"
              data-pjax
              data-hotkey="t">
          Find file
        </a>
        <clipboard-copy for="blob-path" class="btn btn-sm BtnGroup-item">
          Copy path
        </clipboard-copy>
      </div>
      <div id="blob-path" class="breadcrumb">
        <span class="repo-root js-repo-root"><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master"><span>three.js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master/examples"><span>examples</span></a></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master/examples/js"><span>js</span></a></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master/examples/js/libs"><span>libs</span></a></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master/examples/js/libs/draco"><span>draco</span></a></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master/examples/js/libs/draco/gltf"><span>gltf</span></a></span><span class="separator">/</span><strong class="final-path">draco_wasm_wrapper.js</strong>
      </div>
    </div>


    <include-fragment src="/mrdoob/three.js/contributors/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js" class="commit-tease commit-loader">
      <div>
        Fetching contributors&hellip;
      </div>

      <div class="commit-tease-contributors">
          <img alt="" class="loader-loading float-left" src="https://github.githubassets.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" height="16" />
        <span class="loader-error">Cannot retrieve contributors at this time</span>
      </div>
</include-fragment>



    <div class="file ">
      
<div class="file-header">

  <div class="file-actions">


    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/mrdoob/three.js/raw/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/mrdoob/three.js/blame/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/mrdoob/three.js/commits/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="x-github-client://openRepo/https://github.com/mrdoob/three.js?branch=master&amp;filepath=examples%2Fjs%2Flibs%2Fdraco%2Fgltf%2Fdraco_wasm_wrapper.js"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form js-update-url-with-hash" action="/mrdoob/three.js/edit/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="6hCoh8wnQf0xXRFFIO9fd8berSgFinB2z9oZYHJZ1IWomamjKOJd71BtRe9qJYojNvrqgpTTEgmcvjVl4YQLLA==" />
            <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
              <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
            </button>
</form>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" action="/mrdoob/three.js/delete/master/examples/js/libs/draco/gltf/draco_wasm_wrapper.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="Yp5YckvDuTg+TjlEVItXQeMtu6sLuii6UhKhRXUyU4Th8C8XQ+JPF5zIAZddnwsEbQ7A1fVAwY6qx8SKoPQJHg==" />
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      <span class="file-mode" title="File mode">executable file</span>
      <span class="file-info-divider"></span>
      120 lines (119 sloc)
      <span class="file-info-divider"></span>
    59.8 KB
  </div>
</div>

      

  <div itemprop="text" class="blob-wrapper data type-javascript ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> $jscomp<span class="pl-k">=</span>$jscomp<span class="pl-k">||</span>{};<span class="pl-smi">$jscomp</span>.<span class="pl-c1">scope</span><span class="pl-k">=</span>{};<span class="pl-smi">$jscomp</span>.<span class="pl-c1">ASSUME_ES5</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">$jscomp</span>.<span class="pl-c1">ASSUME_NO_NATIVE_MAP</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">$jscomp</span>.<span class="pl-c1">ASSUME_NO_NATIVE_SET</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">$jscomp</span>.<span class="pl-smi">defineProperty</span><span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-c1">ASSUME_ES5</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">Object</span>.<span class="pl-smi">defineProperties</span><span class="pl-k">?</span><span class="pl-c1">Object</span>.<span class="pl-smi">defineProperty</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">k</span>,<span class="pl-smi">f</span>){d<span class="pl-k">!=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">!=</span><span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span><span class="pl-k">&amp;&amp;</span>(d[k]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">value</span>)};<span class="pl-smi">$jscomp</span>.<span class="pl-en">getGlobal</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span><span class="pl-k">===</span>d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">global</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-c1">global</span><span class="pl-k">?</span><span class="pl-c1">global</span><span class="pl-k">:</span>d};<span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span><span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-en">getGlobal</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$jscomp</span>.<span class="pl-en">polyfill</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">k</span>,<span class="pl-smi">f</span>,<span class="pl-smi">u</span>){<span class="pl-k">if</span>(k){f<span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>;d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;u<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>d[u];h <span class="pl-k">in</span> f<span class="pl-k">||</span>(f[h]<span class="pl-k">=</span>{});f<span class="pl-k">=</span>f[h]}d<span class="pl-k">=</span>d[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];u<span class="pl-k">=</span>f[d];k<span class="pl-k">=</span><span class="pl-en">k</span>(u);k<span class="pl-k">!=</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">$jscomp</span>.<span class="pl-en">defineProperty</span>(f,d,{configurable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,writable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>k})}};<span class="pl-smi">$jscomp</span>.<span class="pl-en">polyfill</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Math.imul<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){d<span class="pl-k">=</span><span class="pl-c1">Number</span>(d);f<span class="pl-k">=</span><span class="pl-c1">Number</span>(f);<span class="pl-k">var</span> k<span class="pl-k">=</span>d<span class="pl-k">&amp;</span><span class="pl-c1">65535</span>,h<span class="pl-k">=</span>f<span class="pl-k">&amp;</span><span class="pl-c1">65535</span>;<span class="pl-k">return</span> k<span class="pl-k">*</span>h<span class="pl-k">+</span>((d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">65535</span>)<span class="pl-k">*</span>h<span class="pl-k">+</span>k<span class="pl-k">*</span>(f<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">65535</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>}},<span class="pl-s"><span class="pl-pds">&quot;</span>es6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>es3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$jscomp</span>.<span class="pl-en">polyfill</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Math.clz32<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-c1">Number</span>(d)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-c1">32</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">4294901760</span>)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">16</span>,f<span class="pl-k">+=</span><span class="pl-c1">16</span>);<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">4278190080</span>)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">8</span>,f<span class="pl-k">+=</span><span class="pl-c1">8</span>);<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">4026531840</span>)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">4</span>,f<span class="pl-k">+=</span><span class="pl-c1">4</span>);<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">3221225472</span>)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">2</span>,f<span class="pl-k">+=</span><span class="pl-c1">2</span>);<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">2147483648</span>)<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">++</span>;<span class="pl-k">return</span> f}},<span class="pl-s"><span class="pl-pds">&quot;</span>es6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>es3<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">$jscomp</span>.<span class="pl-en">polyfill</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Math.trunc<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-c1">Number</span>(d);<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(d)<span class="pl-k">||</span><span class="pl-c1">Infinity</span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span><span class="pl-k">===</span>d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> d;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d));<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span><span class="pl-k">-</span>f<span class="pl-k">:</span>f}},<span class="pl-s"><span class="pl-pds">&quot;</span>es6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>es3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$jscomp</span>.<span class="pl-c1">SYMBOL_PREFIX</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>jscomp_symbol_<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbol</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbol</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>.<span class="pl-smi">Symbol</span><span class="pl-k">||</span>(<span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>.<span class="pl-smi">Symbol</span><span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-smi">Symbol</span>)};<span class="pl-smi">$jscomp</span>.<span class="pl-en">Symbol</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>){<span class="pl-k">return</span> <span class="pl-smi">$jscomp</span>.<span class="pl-c1">SYMBOL_PREFIX</span><span class="pl-k">+</span>(k<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>d<span class="pl-k">++</span>}}();</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbolIterator</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbol</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>.<span class="pl-smi">Symbol</span>.<span class="pl-smi">iterator</span>;d<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>.<span class="pl-smi">Symbol</span>.<span class="pl-smi">iterator</span><span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>.<span class="pl-en">Symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>iterator<span class="pl-pds">&quot;</span></span>));<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>[d]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">$jscomp</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>,d,{configurable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,writable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">$jscomp</span>.<span class="pl-en">arrayIterator</span>(<span class="pl-c1">this</span>)}});<span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbolIterator</span><span class="pl-k">=</span><span class="pl-k">function</span>(){}};<span class="pl-smi">$jscomp</span>.<span class="pl-en">arrayIterator</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-smi">$jscomp</span>.<span class="pl-en">iteratorPrototype</span>(<span class="pl-k">function</span>(){<span class="pl-k">return</span> k<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>{done<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,value<span class="pl-k">:</span>d[k<span class="pl-k">++</span>]}<span class="pl-k">:</span>{done<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}})};</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$jscomp</span>.<span class="pl-en">iteratorPrototype</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbolIterator</span>();d<span class="pl-k">=</span>{next<span class="pl-k">:</span>d};d[<span class="pl-smi">$jscomp</span>.<span class="pl-smi">global</span>.<span class="pl-smi">Symbol</span>.<span class="pl-smi">iterator</span>]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-k">return</span> d};<span class="pl-smi">$jscomp</span>.<span class="pl-en">makeIterator</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">$jscomp</span>.<span class="pl-en">initSymbolIterator</span>();<span class="pl-k">var</span> k<span class="pl-k">=</span>d[<span class="pl-c1">Symbol</span>.<span class="pl-smi">iterator</span>];<span class="pl-k">return</span> k<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-c1">call</span>(d)<span class="pl-k">:</span><span class="pl-smi">$jscomp</span>.<span class="pl-en">arrayIterator</span>(d)};<span class="pl-smi">$jscomp</span>.<span class="pl-c1">FORCE_POLYFILL_PROMISE</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$jscomp</span>.<span class="pl-en">polyfill</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Promise<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">k</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">batch_</span><span class="pl-k">=</span><span class="pl-c1">null</span>}function f(d){return d instanceof h?d:new h(function(r,f){r(d)})}if(d&amp;&amp;!$jscomp.FORCE_POLYFILL_PROMISE)return d;k.prototype.asyncExecute=function(d){null==this.batch_&amp;&amp;(this.batch_=[],this.asyncExecuteBatch_());this.batch_.push(d);return this};k.prototype.asyncExecuteBatch_=function(){var d=this;this.asyncExecuteFunction(function(){d.executeBatch_()})};var u=$jscomp.global.setTimeout;k.prototype.asyncExecuteFunction=function(d){u(d,</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>)};<span class="pl-smi">k</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">executeBatch_</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(;<span class="pl-c1">this</span>.<span class="pl-smi">batch_</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">batch_</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">batch_</span>;<span class="pl-c1">this</span>.<span class="pl-smi">batch_</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span><span class="pl-c1">B</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[<span class="pl-c1">B</span>];<span class="pl-k">delete</span> d[<span class="pl-c1">B</span>];<span class="pl-k">try</span>{<span class="pl-en">f</span>()}<span class="pl-k">catch</span>(v){<span class="pl-c1">this</span>.<span class="pl-en">asyncThrow_</span>(v)}}}<span class="pl-c1">this</span>.<span class="pl-smi">batch_</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-smi">k</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">asyncThrow_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-en">asyncExecuteFunction</span>(<span class="pl-k">function</span>(){<span class="pl-k">throw</span> d;})};<span class="pl-k">var</span> <span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">state_</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">result_</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">onSettledCallbacks_</span><span class="pl-k">=</span>[];<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">createResolveAndReject_</span>();<span class="pl-k">try</span>{<span class="pl-en">d</span>(<span class="pl-smi">r</span>.<span class="pl-smi">resolve</span>,<span class="pl-smi">r</span>.<span class="pl-smi">reject</span>)}<span class="pl-k">catch</span>(<span class="pl-c1">Y</span>){<span class="pl-smi">r</span>.<span class="pl-en">reject</span>(<span class="pl-c1">Y</span>)}};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">createResolveAndReject_</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">r</span>){h<span class="pl-k">||</span>(h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">call</span>(f,r))}}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>,h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span>{resolve<span class="pl-k">:</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>.<span class="pl-smi">resolveTo_</span>),reject<span class="pl-k">:</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>.<span class="pl-smi">reject_</span>)}};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">resolveTo_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-c1">this</span>)<span class="pl-c1">this</span>.<span class="pl-en">reject_</span>(<span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>A Promise cannot resolve to itself<span class="pl-pds">&quot;</span></span>));<span class="pl-k">else</span> <span class="pl-k">if</span>(d <span class="pl-k">instanceof</span> h)<span class="pl-c1">this</span>.<span class="pl-en">settleSameAsPromise_</span>(d);<span class="pl-k">else</span>{a<span class="pl-k">:</span><span class="pl-k">switch</span>(<span class="pl-k">typeof</span> d){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>d;<span class="pl-k">break</span> a;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>:f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span> a;<span class="pl-k">default</span>:f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}f<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">resolveToNonPromiseObj_</span>(d)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">fulfill_</span>(d)}};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">resolveToNonPromiseObj_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-k">try</span>{f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">then</span>}<span class="pl-k">catch</span>(<span class="pl-c1">Y</span>){<span class="pl-c1">this</span>.<span class="pl-en">reject_</span>(<span class="pl-c1">Y</span>);<span class="pl-k">return</span>}<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> f<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">settleSameAsThenable_</span>(f,d)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">fulfill_</span>(d)};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reject_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-en">settle_</span>(<span class="pl-c1">2</span>,d)};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fulfill_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-en">settle_</span>(<span class="pl-c1">1</span>,d)};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">settle_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">state_</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot settle(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">&quot;</span>): Promise already settled in state<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">state_</span>);<span class="pl-c1">this</span>.<span class="pl-smi">state_</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">result_</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-en">executeOnSettledCallbacks_</span>()};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">executeOnSettledCallbacks_</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">onSettledCallbacks_</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">onSettledCallbacks_</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>f)d[f].<span class="pl-c1">call</span>(),d[f]<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">onSettledCallbacks_</span><span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-k">var</span> ha<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">k</span>;<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">settleSameAsPromise_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">createResolveAndReject_</span>();<span class="pl-smi">d</span>.<span class="pl-en">callWhenSettled_</span>(<span class="pl-smi">f</span>.<span class="pl-smi">resolve</span>,<span class="pl-smi">f</span>.<span class="pl-smi">reject</span>)};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">settleSameAsThenable_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">createResolveAndReject_</span>();<span class="pl-k">try</span>{<span class="pl-smi">d</span>.<span class="pl-c1">call</span>(f,<span class="pl-smi">h</span>.<span class="pl-smi">resolve</span>,<span class="pl-smi">h</span>.<span class="pl-smi">reject</span>)}<span class="pl-k">catch</span>(v){<span class="pl-smi">h</span>.<span class="pl-en">reject</span>(v)}};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">then</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">function</span> <span class="pl-en">k</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> d<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">f</span>){<span class="pl-k">try</span>{<span class="pl-en">v</span>(<span class="pl-en">d</span>(f))}<span class="pl-k">catch</span>(<span class="pl-c1">O</span>){<span class="pl-en">r</span>(<span class="pl-c1">O</span>)}}<span class="pl-k">:</span>f}<span class="pl-k">var</span> v,r,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">h</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>){v<span class="pl-k">=</span>d;r<span class="pl-k">=</span>f});<span class="pl-c1">this</span>.<span class="pl-en">callWhenSettled_</span>(<span class="pl-en">k</span>(d,v),<span class="pl-en">k</span>(f,r));<span class="pl-k">return</span> <span class="pl-c1">B</span>};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">catch</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">then</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,d)};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">callWhenSettled_</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(){<span class="pl-k">switch</span>(<span class="pl-smi">k</span>.<span class="pl-smi">state_</span>){<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-en">d</span>(<span class="pl-smi">k</span>.<span class="pl-smi">result_</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-en">f</span>(<span class="pl-smi">k</span>.<span class="pl-smi">result_</span>);<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unexpected state: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-smi">state_</span>);}}<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">onSettledCallbacks_</span><span class="pl-k">?</span><span class="pl-smi">ha</span>.<span class="pl-en">asyncExecute</span>(h)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">onSettledCallbacks_</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-smi">ha</span>.<span class="pl-en">asyncExecute</span>(h)})};<span class="pl-smi">h</span>.<span class="pl-smi">resolve</span><span class="pl-k">=</span>f;<span class="pl-smi">h</span>.<span class="pl-en">reject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">h</span>(<span class="pl-k">function</span>(<span class="pl-smi">f</span>,<span class="pl-smi">h</span>){<span class="pl-en">h</span>(d)})};<span class="pl-smi">h</span>.<span class="pl-en">race</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">h</span>(<span class="pl-k">function</span>(<span class="pl-smi">h</span>,</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-en">makeIterator</span>(d),r<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">next</span>();<span class="pl-k">!</span><span class="pl-smi">r</span>.<span class="pl-smi">done</span>;r<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">next</span>())<span class="pl-en">f</span>(<span class="pl-smi">r</span>.<span class="pl-c1">value</span>).<span class="pl-en">callWhenSettled_</span>(h,k)})};<span class="pl-smi">h</span>.<span class="pl-en">all</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">$jscomp</span>.<span class="pl-en">makeIterator</span>(d),r<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">next</span>();<span class="pl-k">return</span> <span class="pl-smi">r</span>.<span class="pl-smi">done</span><span class="pl-k">?</span><span class="pl-en">f</span>([])<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">h</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">v</span>(<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">h</span>){u[f]<span class="pl-k">=</span>h;<span class="pl-c1">B</span><span class="pl-k">--</span>;<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(u)}}<span class="pl-k">var</span> u<span class="pl-k">=</span>[],<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">do</span> <span class="pl-smi">u</span>.<span class="pl-c1">push</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>),<span class="pl-c1">B</span><span class="pl-k">++</span>,<span class="pl-en">f</span>(<span class="pl-smi">r</span>.<span class="pl-c1">value</span>).<span class="pl-en">callWhenSettled_</span>(<span class="pl-en">v</span>(<span class="pl-smi">u</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>),h),r<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">next</span>();<span class="pl-k">while</span>(<span class="pl-k">!</span><span class="pl-smi">r</span>.<span class="pl-smi">done</span>)})};<span class="pl-k">return</span> h},<span class="pl-s"><span class="pl-pds">&quot;</span>es6<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>es3<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">DracoDecoderModule</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">k</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){c<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-c1">16</span>);<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(a<span class="pl-k">/</span>c)<span class="pl-k">*</span>c}function f(a,c){a||O(&quot;Assertion failed: &quot;+c)}function u(a,c){if(0===c||!a)return&quot;&quot;;for(var b=0,e,d=0;;){e=W[a+d&gt;&gt;0];b|=e;if(0==e&amp;&amp;!c)break;d++;if(c&amp;&amp;d==c)break}c||(c=d);e=&quot;&quot;;if(128&gt;b){for(;0&lt;c;)b=String.fromCharCode.apply(String,W.subarray(a,a+Math.min(c,1024))),e=e?e+b:b,a+=1024,c-=1024;return e}return h(W,a)}function h(a,c){for(var b=c;a[b];)++b;if(16&lt;b-c&amp;&amp;a.subarray&amp;&amp;Ia)return Ia.decode(a.subarray(c,b));for(b=</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;;){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[c<span class="pl-k">++</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">return</span> b;<span class="pl-k">if</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">128</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;<span class="pl-k">if</span>(<span class="pl-c1">192</span><span class="pl-k">==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">224</span>))b<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>((e<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>d);<span class="pl-k">else</span>{<span class="pl-k">var</span> f<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;<span class="pl-k">if</span>(<span class="pl-c1">224</span><span class="pl-k">==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">240</span>))e<span class="pl-k">=</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">15</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>f;<span class="pl-k">else</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;<span class="pl-k">if</span>(<span class="pl-c1">240</span><span class="pl-k">==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">248</span>))e<span class="pl-k">=</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">7</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">18</span><span class="pl-k">|</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>f<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>g;<span class="pl-k">else</span>{<span class="pl-k">var</span> h<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;<span class="pl-k">if</span>(<span class="pl-c1">248</span><span class="pl-k">==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">252</span>))e<span class="pl-k">=</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">3</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">|</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">18</span><span class="pl-k">|</span>f<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>h;<span class="pl-k">else</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span>a[c<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;e<span class="pl-k">=</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">30</span><span class="pl-k">|</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">|</span>f<span class="pl-k">&lt;&lt;</span><span class="pl-c1">18</span><span class="pl-k">|</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>h<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>k}}}<span class="pl-c1">65536</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span>b<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(e)<span class="pl-k">:</span>(e<span class="pl-k">-=</span><span class="pl-c1">65536</span>,b<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(<span class="pl-c1">55296</span><span class="pl-k">|</span>e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">10</span>,<span class="pl-c1">56320</span><span class="pl-k">|</span>e<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>))}}<span class="pl-k">else</span> b<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(e)}}function ha(a,c){0&lt;</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">%</span>c<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span>c<span class="pl-k">-</span>a<span class="pl-k">%</span>c);<span class="pl-k">return</span> a}function r(){a.HEAP8=ia=new Int8Array(D);a.HEAP16=Ja=new Int16Array(D);a.HEAP32=E=new Int32Array(D);a.HEAPU8=W=new Uint8Array(D);a.HEAPU16=new Uint16Array(D);a.HEAPU32=new Uint32Array(D);a.HEAPF32=new Float32Array(D);a.HEAPF64=new Float64Array(D)}function B(e){for(;0&lt;e.length;){var c=e.shift();if(&quot;function&quot;==typeof c)c();else{var b=c.func;&quot;number&quot;===typeof b?void 0===c.arg?a.dynCall_v(b):a.dynCall_vi(b,c.arg):b(void 0===c.arg?null:c.arg)}}}function Y(a){return String.prototype.startsWith?</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data:application/octet-stream;base64,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data:application/octet-stream;base64,<span class="pl-pds">&quot;</span></span>)}function v(){return!!v.uncaught_exception}function la(){var e=y.last;if(!e)return(sa(0),0)|0;var c=y.infos[e],b=c.type;if(!b)return(sa(0),e)|0;var p=Array.prototype.slice.call(arguments);a.___cxa_is_pointer_type(b);la.buffer||(la.buffer=Ka(4));E[la.buffer&gt;&gt;2]=e;e=la.buffer;for(var d=0;d&lt;p.length;d++)if(p[d]&amp;&amp;a.___cxa_can_catch(p[d],b,e))return e=E[e&gt;&gt;2],c.adjusted=e,(sa(p[d]),e)|0;e=E[e&gt;&gt;2];</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>(<span class="pl-en">sa</span>(b),e)<span class="pl-k">|</span><span class="pl-c1">0</span>}function Z(e,c){w.varargs=c;try{var b=w.get(),p=w.get(),d=w.get();e=0;Z.buffers||(Z.buffers=[null,[],[]],Z.printChar=function(c,b){var e=Z.buffers[c];f(e);0===b||10===b?((1===c?a.print:a.printErr)(h(e,0)),e.length=0):e.push(b)});for(c=0;c&lt;d;c++){for(var g=E[p+8*c&gt;&gt;2],k=E[p+(8*c+4)&gt;&gt;2],l=0;l&lt;k;l++)Z.printChar(b,W[g+l]);e+=k}return e}catch(ya){return&quot;undefined&quot;!==typeof FS&amp;&amp;ya instanceof FS.ErrnoError||O(ya),-ya.errno}}function ma(e,c){ma.seen||(ma.seen={});e in ma.seen||(a.dynCall_v(c),</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">ma</span>.<span class="pl-smi">seen</span>[e]<span class="pl-k">=</span><span class="pl-c1">1</span>)}function na(a){this.name=&quot;ExitStatus&quot;;this.message=&quot;Program terminated with exit(&quot;+a+&quot;)&quot;;this.status=a}function wa(e){function c(){if(!a.calledRun&amp;&amp;(a.calledRun=!0,!oa)){La||(La=!0,B(Ma));B(Na);if(a.onRuntimeInitialized)a.onRuntimeInitialized();if(a.postRun)for(&quot;function&quot;==typeof a.postRun&amp;&amp;(a.postRun=[a.postRun]);a.postRun.length;)Oa.unshift(a.postRun.shift());B(Oa)}}if(!(0&lt;ea)){if(a.preRun)for(&quot;function&quot;==typeof a.preRun&amp;&amp;(a.preRun=[a.preRun]);a.preRun.length;)Pa.unshift(a.preRun.shift());</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-en">B</span>(Pa);<span class="pl-c1">0</span><span class="pl-k">&lt;</span>ea<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">calledRun</span><span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">setStatus</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">setStatus</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Running...<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">setStatus</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-c1">1</span>);<span class="pl-en">c</span>()},<span class="pl-c1">1</span>))<span class="pl-k">:</span><span class="pl-en">c</span>())}}function O(e){if(a.onAbort)a.onAbort(e);void 0!==e?(a.print(e),a.printErr(e),e=JSON.stringify(e)):e=&quot;&quot;;oa=!0;throw&quot;abort(&quot;+e+&quot;). Build with -s ASSERTIONS=1 for more info.&quot;;}function m(){}function t(a){return(a||m).__cache__}function T(a,c){var b=t(c),e=b[a];if(e)return e;e=Object.create((c||m).prototype);e.ptr=a;return b[a]=e}function U(a){if(&quot;string&quot;===typeof a){for(var c=</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>b){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(b);<span class="pl-c1">55296</span><span class="pl-k">&lt;=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">57343</span><span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">65536</span><span class="pl-k">+</span>((e<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">10</span>)<span class="pl-k">|</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-k">++</span>b)<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>);<span class="pl-c1">127</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span><span class="pl-k">++</span>c<span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-c1">2047</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">65535</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">2097151</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">67108863</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-c1">5</span><span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">6</span>}c<span class="pl-k">=</span><span class="pl-c1">Array</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>);b<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>e){e<span class="pl-k">=</span>b<span class="pl-k">+</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>d){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(d);<span class="pl-c1">55296</span><span class="pl-k">&lt;=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-c1">57343</span><span class="pl-k">&gt;=</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">65536</span><span class="pl-k">+</span>((f<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">10</span>)<span class="pl-k">|</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-k">++</span>d)<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>);<span class="pl-k">if</span>(<span class="pl-c1">127</span><span class="pl-k">&gt;=</span>f){<span class="pl-k">if</span>(b<span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span>f}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">2047</span><span class="pl-k">&gt;=</span>f){<span class="pl-k">if</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">192</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">6</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">65535</span><span class="pl-k">&gt;=</span>f){<span class="pl-k">if</span>(b<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">224</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">12</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">2097151</span><span class="pl-k">&gt;=</span>f){<span class="pl-k">if</span>(b<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">240</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">18</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">67108863</span><span class="pl-k">&gt;=</span>f){<span class="pl-k">if</span>(b<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">248</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(b<span class="pl-k">+</span><span class="pl-c1">5</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">252</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">30</span>;c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">63</span>}c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">18</span><span class="pl-k">&amp;</span><span class="pl-c1">63</span>}c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">12</span><span class="pl-k">&amp;</span><span class="pl-c1">63</span>}c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">6</span><span class="pl-k">&amp;</span><span class="pl-c1">63</span>}c[b<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>f<span class="pl-k">&amp;</span><span class="pl-c1">63</span>}}c[b]<span class="pl-k">=</span><span class="pl-c1">0</span>}a<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">alloc</span>(c,ia);<span class="pl-smi">l</span>.<span class="pl-en">copy</span>(c,ia,a)}<span class="pl-k">return</span> a}function z(){throw&quot;cannot construct a Status, no constructor in IDL&quot;;}function F(){this.ptr=Wa();t(F)[this.ptr]=this}function G(){this.ptr=Xa();t(G)[this.ptr]=this}function H(){this.ptr=Ya();t(H)[this.ptr]=this}function I(){this.ptr=Za();</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t</span>(<span class="pl-c1">I</span>)[<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>}function J(){this.ptr=$a();t(J)[this.ptr]=this}function n(){this.ptr=ab();t(n)[this.ptr]=this}function P(){this.ptr=bb();t(P)[this.ptr]=this}function x(){this.ptr=cb();t(x)[this.ptr]=this}function K(){this.ptr=db();t(K)[this.ptr]=this}function q(){this.ptr=eb();t(q)[this.ptr]=this}function L(){this.ptr=fb();t(L)[this.ptr]=this}function M(){this.ptr=gb();t(M)[this.ptr]=this}function V(){this.ptr=hb();t(V)[this.ptr]=this}function Q(){this.ptr=ib();t(Q)[this.ptr]=this}function g(){this.ptr=</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-en">jb</span>();<span class="pl-en">t</span>(g)[<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>}function C(){this.ptr=kb();t(C)[this.ptr]=this}function X(){throw&quot;cannot construct a VoidPtr, no constructor in IDL&quot;;}function N(){this.ptr=lb();t(N)[this.ptr]=this}function R(){this.ptr=mb();t(R)[this.ptr]=this}d=d||{};var a=&quot;undefined&quot;!==typeof d?d:{},Qa=!1,Ra=!1;a.onRuntimeInitialized=function(){Qa=!0;if(Ra&amp;&amp;&quot;function&quot;===typeof a.onModuleLoaded)a.onModuleLoaded(a)};a.onModuleParsed=function(){Ra=!0;if(Qa&amp;&amp;&quot;function&quot;===typeof a.onModuleLoaded)a.onModuleLoaded(a)};a.isVersionSupported=</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">2</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">3</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span>a[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">3</span><span class="pl-k">&gt;=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">!=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">10</span><span class="pl-k">&lt;</span>a[<span class="pl-c1">1</span>]<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-k">var</span> pa<span class="pl-k">=</span>{},aa;<span class="pl-k">for</span>(aa <span class="pl-k">in</span> a)<span class="pl-smi">a</span>.<span class="pl-en">hasOwnProperty</span>(aa)<span class="pl-k">&amp;&amp;</span>(pa[aa]<span class="pl-k">=</span>a[aa]);<span class="pl-smi">a</span>.<span class="pl-c1">arguments</span><span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-smi">thisProgram</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>./this.program<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-en">quit</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">throw</span> c;};<span class="pl-smi">a</span>.<span class="pl-smi">preRun</span><span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-smi">postRun</span><span class="pl-k">=</span>[];<span class="pl-k">var</span> ja<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,fa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,qa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,za<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ENVIRONMENT</span>)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEB<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">ENVIRONMENT</span>)ja<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WORKER<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">ENVIRONMENT</span>)fa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>NODE<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">ENVIRONMENT</span>)qa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SHELL<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">ENVIRONMENT</span>)za<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Module[&#39;ENVIRONMENT&#39;] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> ja<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span>,fa<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> importScripts,qa<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">process</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> require<span class="pl-k">&amp;&amp;!</span>ja<span class="pl-k">&amp;&amp;!</span>fa,za<span class="pl-k">=</span><span class="pl-k">!</span>ja<span class="pl-k">&amp;&amp;!</span>qa<span class="pl-k">&amp;&amp;!</span>fa;<span class="pl-k">if</span>(qa){<span class="pl-k">var</span> Aa,Ba;<span class="pl-smi">a</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){Aa<span class="pl-k">||</span>(Aa<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fs<span class="pl-pds">&quot;</span></span>));Ba<span class="pl-k">||</span>(Ba<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>));a<span class="pl-k">=</span><span class="pl-smi">Ba</span>.<span class="pl-c1">normalize</span>(a);a<span class="pl-k">=</span><span class="pl-smi">Aa</span>.<span class="pl-en">readFileSync</span>(a);<span class="pl-k">return</span> c<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">toString</span>()};<span class="pl-smi">a</span>.<span class="pl-en">readBinary</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">read</span>(e,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-smi">buffer</span><span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(e));<span class="pl-en">f</span>(<span class="pl-smi">e</span>.<span class="pl-smi">buffer</span>);<span class="pl-k">return</span> e};<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-c1">process</span>.<span class="pl-smi">argv</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">thisProgram</span><span class="pl-k">=</span><span class="pl-c1">process</span>.<span class="pl-smi">argv</span>[<span class="pl-c1">1</span>].<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>));<span class="pl-smi">a</span>.<span class="pl-c1">arguments</span><span class="pl-k">=</span><span class="pl-c1">process</span>.<span class="pl-smi">argv</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">process</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uncaughtException<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(a <span class="pl-k">instanceof</span> na))<span class="pl-k">throw</span> a;});<span class="pl-c1">process</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unhandledRejection<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">process</span>.<span class="pl-en">exit</span>(<span class="pl-c1">1</span>)});<span class="pl-smi">a</span>.<span class="pl-en">inspect</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>[Emscripten Module object]<span class="pl-pds">&quot;</span></span>}}<span class="pl-k">else</span> <span class="pl-k">if</span>(za)<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> read<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">read</span>(a)}),<span class="pl-smi">a</span>.<span class="pl-en">readBinary</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> readbuffer)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-en">readbuffer</span>(a));a<span class="pl-k">=</span><span class="pl-en">read</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>binary<span class="pl-pds">&quot;</span></span>);<span class="pl-en">f</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a);<span class="pl-k">return</span> a},<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> scriptArgs<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">arguments</span><span class="pl-k">=</span>scriptArgs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">arguments</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">a</span>.<span class="pl-c1">arguments</span><span class="pl-k">=</span><span class="pl-c1">arguments</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> quit<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">quit</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-en">quit</span>(a)});<span class="pl-k">else</span> <span class="pl-k">if</span>(ja<span class="pl-k">||</span>fa)<span class="pl-smi">a</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">c</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">c</span>.<span class="pl-c1">send</span>(<span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">responseText</span>},fa<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">readBinary</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">c</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">c</span>.<span class="pl-smi">responseType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">send</span>(<span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">c</span>.<span class="pl-smi">response</span>)}),<span class="pl-smi">a</span>.<span class="pl-en">readAsync</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">e</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-smi">responseType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">e</span>.<span class="pl-en">onload</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">200</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-c1">status</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-c1">status</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">response</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(<span class="pl-smi">e</span>.<span class="pl-smi">response</span>)<span class="pl-k">:</span><span class="pl-en">b</span>()};<span class="pl-smi">e</span>.<span class="pl-smi">onerror</span><span class="pl-k">=</span>b;<span class="pl-smi">e</span>.<span class="pl-c1">send</span>(<span class="pl-c1">null</span>)},<span class="pl-smi">a</span>.<span class="pl-en">setWindowTitle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">document</span>.<span class="pl-c1">title</span><span class="pl-k">=</span>a};<span class="pl-smi">a</span>.<span class="pl-smi">print</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-en">console</span><span class="pl-k">?</span><span class="pl-en">console</span>.<span class="pl-smi">log</span>.<span class="pl-en">bind</span>(<span class="pl-en">console</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> print<span class="pl-k">?</span>print<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-smi">printErr</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> printErr<span class="pl-k">?</span>printErr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-en">console</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-smi">warn</span>.<span class="pl-en">bind</span>(<span class="pl-en">console</span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">print</span>;<span class="pl-smi">a</span>.<span class="pl-smi">print</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">print</span>;<span class="pl-smi">a</span>.<span class="pl-smi">printErr</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">printErr</span>;<span class="pl-k">for</span>(aa <span class="pl-k">in</span> pa)<span class="pl-smi">pa</span>.<span class="pl-en">hasOwnProperty</span>(aa)<span class="pl-k">&amp;&amp;</span>(a[aa]<span class="pl-k">=</span>pa[aa]);pa<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-k">var</span> oa<span class="pl-k">=</span><span class="pl-c1">0</span>,Ia<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> TextDecoder<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">TextDecoder</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utf8<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> TextDecoder<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">TextDecoder</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utf-16le<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> ia,<span class="pl-c1">W</span>,Ja,<span class="pl-c1">E</span>,ba,Ca,ta,ua,Da,ka;<span class="pl-k">var</span> Ea<span class="pl-k">=</span>ba<span class="pl-k">=</span>Ca<span class="pl-k">=</span>ta<span class="pl-k">=</span>ua<span class="pl-k">=</span>Da<span class="pl-k">=</span>ka<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> Sa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">reallocBuffer</span><span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-en">reallocBuffer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-c1">ArrayBuffer</span>.<span class="pl-smi">transfer</span>)<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">ArrayBuffer</span>.<span class="pl-en">transfer</span>(<span class="pl-c1">D</span>,a);<span class="pl-k">else</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span>ia;c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(a);(<span class="pl-k">new</span> <span class="pl-en">Int8Array</span>(c)).<span class="pl-c1">set</span>(b)}}<span class="pl-k">catch</span>(p){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> <span class="pl-en">nb</span>(c)<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">try</span>{<span class="pl-k">var</span> Ta<span class="pl-k">=</span><span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">call</span>.<span class="pl-en">bind</span>(<span class="pl-c1">Object</span>.<span class="pl-en">getOwnPropertyDescriptor</span>(<span class="pl-c1">ArrayBuffer</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>byteLength<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">get</span>);<span class="pl-en">Ta</span>(<span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">4</span>))}<span class="pl-k">catch</span>(e){<span class="pl-en">Ta</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">byteLength</span>}}<span class="pl-k">var</span> Fa<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">TOTAL_STACK</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">5242880</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">TOTAL_MEMORY</span><span class="pl-k">||</span><span class="pl-c1">16777216</span>;<span class="pl-c1">A</span><span class="pl-k">&lt;</span>Fa<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">printErr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TOTAL_MEMORY should be larger than TOTAL_STACK, was <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">A</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>! (TOTAL_STACK=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>Fa<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">buffer</span>)<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">buffer</span>;<span class="pl-k">else</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> WebAssembly<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">WebAssembly</span>.<span class="pl-smi">Memory</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wasmMemory</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">WebAssembly.Memory</span>({initial<span class="pl-k">:</span><span class="pl-c1">A</span><span class="pl-k">/</span><span class="pl-c1">65536</span>}),<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wasmMemory</span>.<span class="pl-smi">buffer</span>)<span class="pl-k">:</span><span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">A</span>),<span class="pl-smi">a</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-c1">D</span>;<span class="pl-en">r</span>();<span class="pl-c1">E</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1668509029</span>;Ja[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">25459</span>;<span class="pl-k">if</span>(<span class="pl-c1">115</span><span class="pl-k">!==</span><span class="pl-c1">W</span>[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">99</span><span class="pl-k">!==</span><span class="pl-c1">W</span>[<span class="pl-c1">3</span>])<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Runtime error: expected the system to be little-endian!<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> Pa<span class="pl-k">=</span>[],Ma<span class="pl-k">=</span>[],Na<span class="pl-k">=</span>[],ob<span class="pl-k">=</span>[],Oa<span class="pl-k">=</span>[],</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">La<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,ea<span class="pl-k">=</span><span class="pl-c1">0</span>,Ga<span class="pl-k">=</span><span class="pl-c1">null</span>,ra<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-smi">preloadedImages</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">preloadedAudios</span><span class="pl-k">=</span>{};(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">e</span>(){<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wasmBinary</span>)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wasmBinary</span>);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">readBinary</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">readBinary</span>(f);<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>on the web, we need the wasm binary to be preloaded and set on Module[&#39;wasmBinary&#39;]. emcc.py will do that for you when generating HTML (but not JS)<span class="pl-pds">&quot;</span></span>;}<span class="pl-k">catch</span>(Va){<span class="pl-en">O</span>(Va)}}function c(){return a.wasmBinary||!ja&amp;&amp;!fa||&quot;function&quot;!==typeof fetch?new Promise(function(a,c){a(e())}):fetch(f,{credentials:&quot;same-origin&quot;}).then(function(a){if(!a.ok)throw&quot;failed to load wasm binary file at &#39;&quot;+</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">arrayBuffer</span>()}).<span class="pl-c1">catch</span>(<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">e</span>()})}function b(b,e,d){function p(c,b){k=c.exports;k.memory&amp;&amp;(c=k.memory,b=a.buffer,c.byteLength&lt;b.byteLength&amp;&amp;a.printErr(&quot;the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here&quot;),b=new Int8Array(b),(new Int8Array(c)).set(b),a.buffer=D=c,r());a.asm=k;a.usingWasm=!0;ea--;a.monitorRunDependencies&amp;&amp;a.monitorRunDependencies(ea);0==ea&amp;&amp;(null!==Ga&amp;&amp;(clearInterval(Ga),Ga=null),ra&amp;&amp;(c=ra,ra=null,c()))}</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>){<span class="pl-en">p</span>(<span class="pl-smi">a</span>.<span class="pl-smi">instance</span>,<span class="pl-smi">a</span>.<span class="pl-smi">module</span>)}function S(b){c().then(function(a){return WebAssembly.instantiate(a,h)}).then(b).catch(function(c){a.printErr(&quot;failed to asynchronously prepare wasm: &quot;+c);O(c)})}if(&quot;object&quot;!==typeof WebAssembly)return a.printErr(&quot;no native wasm support detected&quot;),!1;if(!(a.wasmMemory instanceof WebAssembly.Memory))return a.printErr(&quot;no native wasm Memory in use&quot;),!1;e.memory=a.wasmMemory;h.global={NaN:NaN,Infinity:Infinity};h[&quot;global.Math&quot;]=Math;h.env=e;ea++;a.monitorRunDependencies&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">monitorRunDependencies</span>(ea);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">instantiateWasm</span>)<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">instantiateWasm</span>(h,p)}<span class="pl-k">catch</span>(pb){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">printErr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Module.instantiateWasm callback failed with error: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>pb),<span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-smi">a</span>.<span class="pl-smi">wasmBinary</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-smi">WebAssembly</span>.<span class="pl-smi">instantiateStreaming</span><span class="pl-k">||</span><span class="pl-en">Y</span>(f)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> fetch<span class="pl-k">?</span><span class="pl-en">S</span>(g)<span class="pl-k">:</span><span class="pl-smi">WebAssembly</span>.<span class="pl-en">instantiateStreaming</span>(<span class="pl-en">fetch</span>(f,{credentials<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>same-origin<span class="pl-pds">&quot;</span></span>}),h).<span class="pl-c1">then</span>(g).<span class="pl-c1">catch</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">printErr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wasm streaming compile failed: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c);<span class="pl-smi">a</span>.<span class="pl-en">printErr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>falling back to ArrayBuffer instantiation<span class="pl-pds">&quot;</span></span>);<span class="pl-en">S</span>(g)});<span class="pl-k">return</span>{}}<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>draco_decoder.wast<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>draco_decoder.wasm<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>draco_decoder.temp.asm.js<span class="pl-pds">&quot;</span></span>;<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-smi">locateFile</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">Y</span>(d)<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">locateFile</span>(d)),<span class="pl-en">Y</span>(f)<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">locateFile</span>(f)),<span class="pl-en">Y</span>(g)<span class="pl-k">||</span>(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">locateFile</span>(g)));<span class="pl-k">var</span> h<span class="pl-k">=</span>{global<span class="pl-k">:</span><span class="pl-c1">null</span>,env<span class="pl-k">:</span><span class="pl-c1">null</span>,asm2wasm<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">f64-rem</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> a<span class="pl-k">%</span>c},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">debugger</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">debugger</span>}},parent<span class="pl-k">:</span>a},k<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-smi">asmPreload</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">asm</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reallocBuffer</span>;<span class="pl-smi">a</span>.<span class="pl-en">reallocBuffer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>asmjs<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>m)<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">l</span>(c);<span class="pl-k">else</span> a<span class="pl-k">:</span>{c<span class="pl-k">=</span><span class="pl-en">ha</span>(c,<span class="pl-smi">a</span>.<span class="pl-smi">usingWasm</span><span class="pl-k">?</span><span class="pl-c1">65536</span><span class="pl-k">:</span><span class="pl-c1">16777216</span>);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">buffer</span>.<span class="pl-smi">byteLength</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">usingWasm</span>)<span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">wasmMemory</span>.<span class="pl-en">grow</span>((c<span class="pl-k">-</span>e)<span class="pl-k">/</span><span class="pl-c1">65536</span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wasmMemory</span>.<span class="pl-smi">buffer</span><span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">break</span> a}<span class="pl-k">catch</span>(ud){b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">break</span> a}b<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>}<span class="pl-k">return</span> b};<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-en">asm</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">table</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wasmTableSize</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">1024</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wasmMaxTableSize</span>;<span class="pl-smi">e</span>.<span class="pl-smi">table</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> WebAssembly<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">WebAssembly</span>.<span class="pl-smi">Table</span><span class="pl-k">?</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">WebAssembly.Table</span>({initial<span class="pl-k">:</span>p,maximum<span class="pl-k">:</span>f,element<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anyfunc<span class="pl-pds">&quot;</span></span>})<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">WebAssembly.Table</span>({initial<span class="pl-k">:</span>p,element<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anyfunc<span class="pl-pds">&quot;</span></span>})<span class="pl-k">:</span><span class="pl-c1">Array</span>(p);<span class="pl-smi">a</span>.<span class="pl-smi">wasmTable</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">table</span>}<span class="pl-smi">e</span>.<span class="pl-smi">memoryBase</span><span class="pl-k">||</span>(<span class="pl-smi">e</span>.<span class="pl-smi">memoryBase</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">STATIC_BASE</span>);</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">tableBase</span><span class="pl-k">||</span>(<span class="pl-smi">e</span>.<span class="pl-smi">tableBase</span><span class="pl-k">=</span><span class="pl-c1">0</span>);(c<span class="pl-k">=</span><span class="pl-en">b</span>(c,e,d))<span class="pl-k">||</span><span class="pl-en">O</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> c}})();Ea<span class="pl-k">=</span><span class="pl-c1">1024</span>;ba<span class="pl-k">=</span>Ea<span class="pl-k">+</span><span class="pl-c1">14480</span>;<span class="pl-smi">Ma</span>.<span class="pl-c1">push</span>();<span class="pl-smi">a</span>.<span class="pl-c1">STATIC_BASE</span><span class="pl-k">=</span>Ea;<span class="pl-smi">a</span>.<span class="pl-c1">STATIC_BUMP</span><span class="pl-k">=</span><span class="pl-c1">14480</span>;<span class="pl-k">var</span> qb<span class="pl-k">=</span>ba;ba<span class="pl-k">+=</span><span class="pl-c1">16</span>;<span class="pl-k">var</span> y<span class="pl-k">=</span>{last<span class="pl-k">:</span><span class="pl-c1">0</span>,caught<span class="pl-k">:</span>[],infos<span class="pl-k">:</span>{},<span class="pl-en">deAdjust</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[a])<span class="pl-k">return</span> a;<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-smi">y</span>.<span class="pl-smi">infos</span>)<span class="pl-k">if</span>(<span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[c].<span class="pl-smi">adjusted</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> c;<span class="pl-k">return</span> a},<span class="pl-en">addRef</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[a].<span class="pl-smi">refcount</span><span class="pl-k">++</span>},</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-en">decRef</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(e){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[e];<span class="pl-en">f</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">refcount</span>);<span class="pl-smi">c</span>.<span class="pl-smi">refcount</span><span class="pl-k">--</span>;<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">refcount</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">rethrown</span><span class="pl-k">||</span>(<span class="pl-smi">c</span>.<span class="pl-smi">destructor</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">dynCall_vi</span>(<span class="pl-smi">c</span>.<span class="pl-smi">destructor</span>,e),<span class="pl-k">delete</span> <span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[e],<span class="pl-en">___cxa_free_exception</span>(e))}},<span class="pl-en">clearRef</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[a].<span class="pl-smi">refcount</span><span class="pl-k">=</span><span class="pl-c1">0</span>)}},w<span class="pl-k">=</span>{varargs<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">w</span>.<span class="pl-smi">varargs</span><span class="pl-k">+=</span><span class="pl-c1">4</span>;<span class="pl-k">return</span> <span class="pl-c1">E</span>[<span class="pl-smi">w</span>.<span class="pl-smi">varargs</span><span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]},<span class="pl-en">getStr</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">u</span>(<span class="pl-smi">w</span>.<span class="pl-c1">get</span>())},<span class="pl-en">get64</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">get</span>(),c<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">get</span>();<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">:</span><span class="pl-en">f</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>c);<span class="pl-k">return</span> a},<span class="pl-en">getZero</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">f</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">w</span>.<span class="pl-c1">get</span>())}},va<span class="pl-k">=</span>{},Ha<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-en">ka</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">f</span>(<span class="pl-k">!</span>Sa);<span class="pl-k">var</span> c<span class="pl-k">=</span>ba;ba<span class="pl-k">=</span>ba<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+</span><span class="pl-c1">15</span><span class="pl-k">&amp;</span><span class="pl-k">-</span><span class="pl-c1">16</span>;<span class="pl-k">return</span> c}(<span class="pl-c1">4</span>);Ca<span class="pl-k">=</span>ta<span class="pl-k">=</span><span class="pl-en">k</span>(ba);ua<span class="pl-k">=</span>Ca<span class="pl-k">+</span>Fa;Da<span class="pl-k">=</span><span class="pl-en">k</span>(ua);<span class="pl-c1">E</span>[ka<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>Da;Sa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">wasmTableSize</span><span class="pl-k">=</span><span class="pl-c1">468</span>;<span class="pl-smi">a</span>.<span class="pl-smi">wasmMaxTableSize</span><span class="pl-k">=</span><span class="pl-c1">468</span>;<span class="pl-smi">a</span>.<span class="pl-smi">asmGlobalArg</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">asmLibraryArg</span><span class="pl-k">=</span>{abort<span class="pl-k">:</span><span class="pl-c1">O</span>,assert<span class="pl-k">:</span>f,<span class="pl-en">enlargeMemory</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">usingWasm</span><span class="pl-k">?</span><span class="pl-c1">65536</span><span class="pl-k">:</span><span class="pl-c1">16777216</span>,c<span class="pl-k">=</span><span class="pl-c1">2147483648</span><span class="pl-k">-</span>e;<span class="pl-k">if</span>(<span class="pl-c1">E</span>[ka<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">A</span>;<span class="pl-k">for</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">A</span>,<span class="pl-c1">16777216</span>);<span class="pl-c1">A</span><span class="pl-k">&lt;</span><span class="pl-c1">E</span>[ka<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>];)<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">536870912</span><span class="pl-k">&gt;=</span><span class="pl-c1">A</span><span class="pl-k">?</span><span class="pl-en">ha</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">A</span>,e)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-en">ha</span>((<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span><span class="pl-c1">2147483648</span>)<span class="pl-k">/</span><span class="pl-c1">4</span>,e),c);e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">reallocBuffer</span>(<span class="pl-c1">A</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">byteLength</span><span class="pl-k">!=</span><span class="pl-c1">A</span>)<span class="pl-k">return</span> <span class="pl-c1">A</span><span class="pl-k">=</span>b,<span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">=</span>e;<span class="pl-en">r</span>();<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">getTotalMemory</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">A</span>},<span class="pl-en">abortOnCannotGrowMemory</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">O</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">A</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 <span class="pl-pds">&quot;</span></span>)},<span class="pl-en">invoke_ii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">dynCall_ii</span>(e,c)}<span class="pl-k">catch</span>(b){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>b)<span class="pl-k">throw</span> b;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_iii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">dynCall_iii</span>(e,c,b)}<span class="pl-k">catch</span>(p){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> p<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>p)<span class="pl-k">throw</span> p;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_iiii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">dynCall_iiii</span>(e,</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">c,b,d)}<span class="pl-k">catch</span>(<span class="pl-c1">S</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">S</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">S</span>)<span class="pl-k">throw</span> <span class="pl-c1">S</span>;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_iiiiiii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">dynCall_iiiiiii</span>(e,c,b,d,f,g,h)}<span class="pl-k">catch</span>(da){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> da<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>da)<span class="pl-k">throw</span> da;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_v</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_v</span>(e)}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> c<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>c)<span class="pl-k">throw</span> c;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_vi</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_vi</span>(e,c)}<span class="pl-k">catch</span>(b){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>b)<span class="pl-k">throw</span> b;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_vii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_vii</span>(e,</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">c,b)}<span class="pl-k">catch</span>(p){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> p<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>p)<span class="pl-k">throw</span> p;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_viii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viii</span>(e,c,b,d)}<span class="pl-k">catch</span>(<span class="pl-c1">S</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">S</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">S</span>)<span class="pl-k">throw</span> <span class="pl-c1">S</span>;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_viiii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viiii</span>(e,c,b,d,f)}<span class="pl-k">catch</span>(xa){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> xa<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>xa)<span class="pl-k">throw</span> xa;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_viiiii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viiiii</span>(e,c,b,d,f,g)}<span class="pl-k">catch</span>(ca){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> ca<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>ca)<span class="pl-k">throw</span> ca;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">invoke_viiiiii</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viiiiii</span>(e,c,b,d,f,g,h)}<span class="pl-k">catch</span>(da){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> da<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>longjmp<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>da)<span class="pl-k">throw</span> da;<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},__ZSt18uncaught_exceptionv<span class="pl-k">:</span>v,<span class="pl-en">___cxa_allocate_exception</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">Ka</span>(a)},<span class="pl-en">___cxa_begin_catch</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[a];c<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">caught</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">caught</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">v</span>.<span class="pl-smi">uncaught_exception</span><span class="pl-k">--</span>);c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">rethrown</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">y</span>.<span class="pl-smi">caught</span>.<span class="pl-c1">push</span>(a);<span class="pl-smi">y</span>.<span class="pl-en">addRef</span>(<span class="pl-smi">y</span>.<span class="pl-en">deAdjust</span>(a));<span class="pl-k">return</span> a},___cxa_find_matching_catch<span class="pl-k">:</span>la,<span class="pl-en">___cxa_pure_virtual</span><span class="pl-k">:</span><span class="pl-k">function</span>(){oa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Pure virtual function called!<span class="pl-pds">&quot;</span></span>;},<span class="pl-en">___cxa_throw</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-smi">y</span>.<span class="pl-smi">infos</span>[a]<span class="pl-k">=</span>{ptr<span class="pl-k">:</span>a,adjusted<span class="pl-k">:</span>a,type<span class="pl-k">:</span>c,destructor<span class="pl-k">:</span>b,refcount<span class="pl-k">:</span><span class="pl-c1">0</span>,caught<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,rethrown<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">y</span>.<span class="pl-smi">last</span><span class="pl-k">=</span>a;<span class="pl-s"><span class="pl-pds">&quot;</span>uncaught_exception<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> v<span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-smi">uncaught_exception</span><span class="pl-k">++</span><span class="pl-k">:</span><span class="pl-smi">v</span>.<span class="pl-smi">uncaught_exception</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">throw</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.<span class="pl-pds">&quot;</span></span>;},<span class="pl-en">___gxx_personality_v0</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">___resumeException</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">y</span>.<span class="pl-smi">last</span><span class="pl-k">||</span>(<span class="pl-smi">y</span>.<span class="pl-smi">last</span><span class="pl-k">=</span>a);<span class="pl-k">throw</span> a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">},<span class="pl-en">___setErrNo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-smi">___errno_location</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">E</span>[<span class="pl-smi">a</span>.<span class="pl-en">___errno_location</span>()<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d);<span class="pl-k">return</span> d},<span class="pl-en">___syscall140</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">w</span>.<span class="pl-smi">varargs</span><span class="pl-k">=</span>c;<span class="pl-k">try</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-en">getStreamFromFD</span>();<span class="pl-smi">w</span>.<span class="pl-c1">get</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">get</span>(),e<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">get</span>(),f<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">get</span>();<span class="pl-c1">FS</span>.<span class="pl-en">llseek</span>(b,d,f);<span class="pl-c1">E</span>[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">position</span>;<span class="pl-smi">b</span>.<span class="pl-smi">getdents</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">getdents</span><span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(ca){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">FS</span><span class="pl-k">&amp;&amp;</span>ca <span class="pl-k">instanceof</span> <span class="pl-c1">FS</span>.<span class="pl-smi">ErrnoError</span><span class="pl-k">||</span><span class="pl-en">O</span>(ca),<span class="pl-k">-</span><span class="pl-smi">ca</span>.<span class="pl-smi">errno</span>}},___syscall146<span class="pl-k">:</span><span class="pl-c1">Z</span>,<span class="pl-en">___syscall6</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">w</span>.<span class="pl-smi">varargs</span><span class="pl-k">=</span>c;<span class="pl-k">try</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-en">getStreamFromFD</span>();<span class="pl-c1">FS</span>.<span class="pl-c1">close</span>(b);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(p){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> <span class="pl-c1">FS</span><span class="pl-k">&amp;&amp;</span>p <span class="pl-k">instanceof</span> <span class="pl-c1">FS</span>.<span class="pl-smi">ErrnoError</span><span class="pl-k">||</span><span class="pl-en">O</span>(p),<span class="pl-k">-</span><span class="pl-smi">p</span>.<span class="pl-smi">errno</span>}},<span class="pl-en">_abort</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-c1">abort</span>()},<span class="pl-en">_emscripten_memcpy_big</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-c1">W</span>.<span class="pl-c1">set</span>(<span class="pl-c1">W</span>.<span class="pl-en">subarray</span>(c,c<span class="pl-k">+</span>b),a);<span class="pl-k">return</span> a},<span class="pl-en">_llvm_trap</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">O</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>trap!<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">_pthread_getspecific</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> va[a]<span class="pl-k">||</span><span class="pl-c1">0</span>},<span class="pl-en">_pthread_key_create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>a)<span class="pl-k">return</span> <span class="pl-c1">22</span>;<span class="pl-c1">E</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>Ha;va[Ha]<span class="pl-k">=</span><span class="pl-c1">0</span>;Ha<span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span>},_pthread_once<span class="pl-k">:</span>ma,<span class="pl-en">_pthread_setspecific</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(a <span class="pl-k">in</span> va))<span class="pl-k">return</span> <span class="pl-c1">22</span>;va[a]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">0</span>},<span class="pl-en">flush_NO_FILESYSTEM</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_fflush</span>;d<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(<span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">printChar</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Z</span>.<span class="pl-smi">buffers</span>;c[<span class="pl-c1">1</span>].<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">10</span>);c[<span class="pl-c1">2</span>].<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(<span class="pl-c1">2</span>,<span class="pl-c1">10</span>)}},<span class="pl-c1">DYNAMICTOP_PTR</span><span class="pl-k">:</span>ka,tempDoublePtr<span class="pl-k">:</span>qb,<span class="pl-c1">ABORT</span><span class="pl-k">:</span>oa,<span class="pl-c1">STACKTOP</span><span class="pl-k">:</span>ta,<span class="pl-c1">STACK_MAX</span><span class="pl-k">:</span>ua};<span class="pl-k">var</span> Ua<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">asm</span>(<span class="pl-smi">a</span>.<span class="pl-smi">asmGlobalArg</span>,<span class="pl-smi">a</span>.<span class="pl-smi">asmLibraryArg</span>,<span class="pl-c1">D</span>);<span class="pl-smi">a</span>.<span class="pl-smi">asm</span><span class="pl-k">=</span>Ua;<span class="pl-smi">a</span>.<span class="pl-en">___cxa_can_catch</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">___cxa_can_catch</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">___cxa_is_pointer_type</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">___cxa_is_pointer_type</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-k">var</span> $a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeOctahedronTransform_AttributeOctahedronTransform_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeOctahedronTransform_AttributeOctahedronTransform_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},rb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeOctahedronTransform_InitFromAttribute_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeOctahedronTransform_InitFromAttribute_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},sb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeOctahedronTransform___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeOctahedronTransform___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},tb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeOctahedronTransform_quantization_bits_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeOctahedronTransform_quantization_bits_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},cb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeQuantizationTransform_AttributeQuantizationTransform_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeQuantizationTransform_AttributeQuantizationTransform_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ub<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeQuantizationTransform_InitFromAttribute_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeQuantizationTransform_InitFromAttribute_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},vb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeQuantizationTransform___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeQuantizationTransform___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},wb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeQuantizationTransform_min_value_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeQuantizationTransform_min_value_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},xb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeQuantizationTransform_quantization_bits_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeQuantizationTransform_quantization_bits_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},yb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeQuantizationTransform_range_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeQuantizationTransform_range_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},bb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeTransformData_AttributeTransformData_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeTransformData_AttributeTransformData_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},zb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeTransformData___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeTransformData___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ab<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_AttributeTransformData_transform_type_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_AttributeTransformData_transform_type_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},ib<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DecoderBuffer_DecoderBuffer_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DecoderBuffer_DecoderBuffer_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Bb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DecoderBuffer_Init_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DecoderBuffer_Init_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Cb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DecoderBuffer___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DecoderBuffer___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Db<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_DecodeBufferToMesh_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_DecodeBufferToMesh_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Eb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_DecodeBufferToPointCloud_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_DecodeBufferToPointCloud_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},jb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_Decoder_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_Decoder_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Fb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeByUniqueId_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeByUniqueId_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Gb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeFloatForAllPoints_3</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeFloatForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Hb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeFloat_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeFloat_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ib<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeIdByMetadataEntry_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeIdByMetadataEntry_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Jb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeIdByName_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeIdByName_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Kb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeId_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeId_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Lb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeInt16ForAllPoints_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeInt16ForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Mb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeInt32ForAllPoints_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeInt32ForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Nb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeInt8ForAllPoints_3</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeInt8ForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ob<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeIntForAllPoints_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeIntForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Pb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeMetadata_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeMetadata_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Qb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeUInt16ForAllPoints_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeUInt16ForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Rb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeUInt32ForAllPoints_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeUInt32ForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Sb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttributeUInt8ForAllPoints_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttributeUInt8ForAllPoints_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Tb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetAttribute_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetAttribute_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ub<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetEncodedGeometryType_1</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetEncodedGeometryType_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Vb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetFaceFromMesh_3</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetFaceFromMesh_3</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Wb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetMetadata_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetMetadata_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Xb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_GetTriangleStripsFromMesh_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_GetTriangleStripsFromMesh_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Yb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder_SkipAttributeTransform_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder_SkipAttributeTransform_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Zb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Decoder___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Decoder___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},gb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoFloat32Array_DracoFloat32Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoFloat32Array_DracoFloat32Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},$b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_DracoFloat32Array_GetValue_1</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoFloat32Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ac<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoFloat32Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoFloat32Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},bc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoFloat32Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoFloat32Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},fb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt16Array_DracoInt16Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt16Array_DracoInt16Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},cc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt16Array_GetValue_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt16Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},dc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt16Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt16Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ec<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt16Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt16Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},lb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt32Array_DracoInt32Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt32Array_DracoInt32Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},fc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt32Array_GetValue_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt32Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},gc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt32Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt32Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},hc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt32Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt32Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},db<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt8Array_DracoInt8Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt8Array_DracoInt8Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},ic<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt8Array_GetValue_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt8Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},jc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt8Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt8Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},kc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoInt8Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoInt8Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Wa<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt16Array_DracoUInt16Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt16Array_DracoUInt16Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},lc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt16Array_GetValue_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt16Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},mc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt16Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt16Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},nc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt16Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt16Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Za<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt32Array_DracoUInt32Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt32Array_DracoUInt32Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},oc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt32Array_GetValue_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt32Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},pc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt32Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt32Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},qc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt32Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt32Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ya<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt8Array_DracoUInt8Array_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt8Array_DracoUInt8Array_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},rc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt8Array_GetValue_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt8Array_GetValue_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},sc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt8Array___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt8Array___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},tc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_DracoUInt8Array_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_DracoUInt8Array_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},hb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_GeometryAttribute_GeometryAttribute_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_GeometryAttribute_GeometryAttribute_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},uc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_GeometryAttribute___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_GeometryAttribute___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},kb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Mesh_Mesh_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Mesh_Mesh_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},vc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Mesh___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Mesh___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},wc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Mesh_num_attributes_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Mesh_num_attributes_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},xc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Mesh_num_faces_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Mesh_num_faces_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},yc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Mesh_num_points_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Mesh_num_points_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},zc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_GetDoubleEntry_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_GetDoubleEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ac<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_GetEntryName_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_GetEntryName_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Bc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_GetIntEntry_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_GetIntEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Cc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_GetStringEntry_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_GetStringEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Dc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_HasDoubleEntry_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_HasDoubleEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ec<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_HasEntry_2</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_HasEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Fc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_HasIntEntry_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_HasIntEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Gc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_HasStringEntry_2</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_HasStringEntry_2</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},eb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_MetadataQuerier_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_MetadataQuerier_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Hc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier_NumEntries_1</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier_NumEntries_1</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Ic<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_MetadataQuerier___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_MetadataQuerier___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},mb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Metadata_Metadata_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Metadata_Metadata_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Jc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Metadata___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Metadata___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Kc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_GetAttributeTransformData_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_GetAttributeTransformData_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ab<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_PointAttribute_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_PointAttribute_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Lc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Mc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_attribute_type_0</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_attribute_type_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Nc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_byte_offset_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_byte_offset_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Oc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_byte_stride_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_byte_stride_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Pc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_data_type_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_data_type_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Qc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_normalized_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_normalized_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Rc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_num_components_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_num_components_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Sc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_size_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_size_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Tc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointAttribute_unique_id_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointAttribute_unique_id_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Xa<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointCloud_PointCloud_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointCloud_PointCloud_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Uc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointCloud___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointCloud___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Vc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointCloud_num_attributes_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointCloud_num_attributes_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Wc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_PointCloud_num_points_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_PointCloud_num_points_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},Xc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Status___destroy___0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Status___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Yc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Status_code_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Status_code_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},Zc<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Status_error_msg_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Status_error_msg_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},$c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_bind_Status_ok_0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_Status_ok_0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ad<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_bind_VoidPtr___destroy___0</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_bind_VoidPtr___destroy___0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},bd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_INVALID_TRANSFORM</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_INVALID_TRANSFORM</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},cd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_NO_TRANSFORM</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_NO_TRANSFORM</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},dd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_OCTAHEDRON_TRANSFORM</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_OCTAHEDRON_TRANSFORM</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ed<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_QUANTIZATION_TRANSFORM</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_QUANTIZATION_TRANSFORM</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},fd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_EncodedGeometryType_INVALID_GEOMETRY_TYPE</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_EncodedGeometryType_INVALID_GEOMETRY_TYPE</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},gd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_EncodedGeometryType_POINT_CLOUD</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_EncodedGeometryType_POINT_CLOUD</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},hd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_EncodedGeometryType_TRIANGULAR_MESH</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_EncodedGeometryType_TRIANGULAR_MESH</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},id<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_GeometryAttribute_Type_COLOR</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_COLOR</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},jd<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_GeometryAttribute_Type_GENERIC</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_GENERIC</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},kd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_GeometryAttribute_Type_INVALID</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_INVALID</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},ld<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_GeometryAttribute_Type_NORMAL</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_NORMAL</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},md<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_POSITION</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_POSITION</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},nd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_GeometryAttribute_Type_TEX_COORD</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_GeometryAttribute_Type_TEX_COORD</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},od<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_StatusCode_ERROR</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_StatusCode_ERROR</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},pd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_StatusCode_INVALID_PARAMETER</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_StatusCode_INVALID_PARAMETER</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},qd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_StatusCode_IO_ERROR</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_StatusCode_IO_ERROR</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},rd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_StatusCode_OK</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_StatusCode_OK</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},sd<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_StatusCode_UNKNOWN_VERSION</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_StatusCode_UNKNOWN_VERSION</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)},td<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_enum_draco_StatusCode_UNSUPPORTED_VERSION</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_enum_draco_StatusCode_UNSUPPORTED_VERSION</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)},nb<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_emscripten_replace_memory</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_emscripten_replace_memory</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">_free</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_free</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">_llvm_bswap_i32</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_llvm_bswap_i32</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-k">var</span> Ka<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_malloc</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_malloc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">_memcpy</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_memcpy</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">_memmove</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_memmove</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">_memset</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_memset</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">_sbrk</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">_sbrk</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">establishStackSpace</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">establishStackSpace</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">getTempRet0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">getTempRet0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">runPostSets</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">runPostSets</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-k">var</span> sa<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">setTempRet0</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">setTempRet0</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">setThrew</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">setThrew</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">stackAlloc</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">stackAlloc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">stackRestore</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">stackRestore</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">stackSave</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">stackSave</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_ii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_ii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_iii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_iii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_iiii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_iiii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_iiiiiii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_iiiiiii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_v</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_vi</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_vi</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_vii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_vii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_viii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viiii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_viiii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viiiii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_viiiii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-en">dynCall_viiiiii</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">asm</span>.<span class="pl-smi">dynCall_viiiiii</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">a</span>.<span class="pl-smi">asm</span><span class="pl-k">=</span>Ua;<span class="pl-smi">a</span>.<span class="pl-en">then</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">calledRun</span>)<span class="pl-en">d</span>(a);</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">onRuntimeInitialized</span>;<span class="pl-smi">a</span>.<span class="pl-en">onRuntimeInitialized</span><span class="pl-k">=</span><span class="pl-k">function</span>(){c<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>();<span class="pl-en">d</span>(a)}}<span class="pl-k">return</span> a};<span class="pl-smi">na</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Error</span>();<span class="pl-smi">na</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>na;<span class="pl-en">ra</span><span class="pl-k">=</span><span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-smi">a</span>.<span class="pl-smi">calledRun</span><span class="pl-k">||</span><span class="pl-en">wa</span>();<span class="pl-smi">a</span>.<span class="pl-smi">calledRun</span><span class="pl-k">||</span>(ra<span class="pl-k">=</span>c)};<span class="pl-smi">a</span>.<span class="pl-smi">run</span><span class="pl-k">=</span>wa;<span class="pl-smi">a</span>.<span class="pl-en">exit</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">noExitRuntime</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">!==</span>c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">noExitRuntime</span><span class="pl-k">&amp;&amp;</span>(oa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,ta<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-en">B</span>(ob),<span class="pl-smi">a</span>.<span class="pl-smi">onExit</span>))<span class="pl-smi">a</span>.<span class="pl-en">onExit</span>(c);qa<span class="pl-k">&amp;&amp;</span><span class="pl-c1">process</span>.<span class="pl-en">exit</span>(c);<span class="pl-smi">a</span>.<span class="pl-en">quit</span>(c,<span class="pl-k">new</span> <span class="pl-en">na</span>(c))}};<span class="pl-smi">a</span>.<span class="pl-smi">abort</span><span class="pl-k">=</span><span class="pl-c1">O</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">preInit</span>)<span class="pl-k">for</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-smi">preInit</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">preInit</span><span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-smi">preInit</span>]);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">preInit</span>.<span class="pl-c1">length</span>;)<span class="pl-smi">a</span>.<span class="pl-smi">preInit</span>.<span class="pl-c1">pop</span>()();<span class="pl-smi">a</span>.<span class="pl-smi">noExitRuntime</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-en">wa</span>();<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>m;<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span>m;<span class="pl-smi">m</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">WrapperObject</span><span class="pl-k">=</span>m;<span class="pl-smi">a</span>.<span class="pl-smi">getCache</span><span class="pl-k">=</span>t;<span class="pl-smi">a</span>.<span class="pl-smi">wrapPointer</span><span class="pl-k">=</span><span class="pl-c1">T</span>;<span class="pl-smi">a</span>.<span class="pl-en">castObject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>,b)};<span class="pl-smi">a</span>.<span class="pl-c1">NULL</span><span class="pl-k">=</span><span class="pl-en">T</span>(<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">destroy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">__destroy__</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Error: Cannot destroy object. (Did you create it yourself?)<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-en">__destroy__</span>();<span class="pl-k">delete</span> <span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-smi">__class__</span>)[<span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>]};<span class="pl-smi">a</span>.<span class="pl-en">compare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">ptr</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>};<span class="pl-smi">a</span>.<span class="pl-en">getPointer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>};<span class="pl-smi">a</span>.<span class="pl-en">getClass</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">__class__</span>};<span class="pl-k">var</span> l<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line">{buffer<span class="pl-k">:</span><span class="pl-c1">0</span>,size<span class="pl-k">:</span><span class="pl-c1">0</span>,pos<span class="pl-k">:</span><span class="pl-c1">0</span>,temps<span class="pl-k">:</span>[],needed<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">prepare</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-smi">needed</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-smi">temps</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-en">_free</span>(<span class="pl-smi">l</span>.<span class="pl-smi">temps</span>[c]);<span class="pl-smi">l</span>.<span class="pl-smi">temps</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-en">_free</span>(<span class="pl-smi">l</span>.<span class="pl-smi">buffer</span>);<span class="pl-smi">l</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">l</span>.<span class="pl-c1">size</span><span class="pl-k">+=</span><span class="pl-smi">l</span>.<span class="pl-smi">needed</span>;<span class="pl-smi">l</span>.<span class="pl-smi">needed</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-smi">l</span>.<span class="pl-smi">buffer</span><span class="pl-k">||</span>(<span class="pl-smi">l</span>.<span class="pl-c1">size</span><span class="pl-k">+=</span><span class="pl-c1">128</span>,<span class="pl-smi">l</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_malloc</span>(<span class="pl-smi">l</span>.<span class="pl-c1">size</span>),<span class="pl-en">f</span>(<span class="pl-smi">l</span>.<span class="pl-smi">buffer</span>));<span class="pl-smi">l</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-c1">0</span>},<span class="pl-en">alloc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-en">f</span>(<span class="pl-smi">l</span>.<span class="pl-smi">buffer</span>);c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-c1">BYTES_PER_ELEMENT</span>;c<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">7</span><span class="pl-k">&amp;</span><span class="pl-k">-</span><span class="pl-c1">8</span>;<span class="pl-smi">l</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span>c<span class="pl-k">&gt;=</span><span class="pl-smi">l</span>.<span class="pl-c1">size</span><span class="pl-k">?</span>(<span class="pl-en">f</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>c),<span class="pl-smi">l</span>.<span class="pl-smi">needed</span><span class="pl-k">+=</span>c,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">_malloc</span>(c),<span class="pl-smi">l</span>.<span class="pl-smi">temps</span>.<span class="pl-c1">push</span>(b))<span class="pl-k">:</span>(b<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">buffer</span><span class="pl-k">+</span><span class="pl-smi">l</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">l</span>.<span class="pl-smi">pos</span><span class="pl-k">+=</span>c);<span class="pl-k">return</span> b},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">switch</span>(<span class="pl-smi">b</span>.<span class="pl-c1">BYTES_PER_ELEMENT</span>){<span class="pl-k">case</span> <span class="pl-c1">2</span>:d<span class="pl-k">&gt;&gt;=</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span>:d<span class="pl-k">&gt;&gt;=</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span>:d<span class="pl-k">&gt;&gt;=</span><span class="pl-c1">3</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)b[d<span class="pl-k">+</span>c]<span class="pl-k">=</span>a[c]}};<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>z;<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span>z;<span class="pl-smi">z</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">Status</span><span class="pl-k">=</span>z;<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">code</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">code</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Yc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">ok</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">ok</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">$c</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">error_msg</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">error_msg</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">u</span>(<span class="pl-en">Zc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>))};<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Xc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">F</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">F</span>;<span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">F</span>;<span class="pl-c1">F</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoUInt16Array</span><span class="pl-k">=</span><span class="pl-c1">F</span>;<span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">lc</span>(c,a)};<span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">nc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">mc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-c1">G</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">PointCloud</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_attributes</span><span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_attributes</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Vc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_points</span><span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">num_points</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Wc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Uc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">H</span>;<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">H</span>;<span class="pl-c1">H</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoUInt8Array</span><span class="pl-k">=</span><span class="pl-c1">H</span>;<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">rc</span>(c,a)};<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">tc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">sc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">I</span>;<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">I</span>;<span class="pl-c1">I</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoUInt32Array</span><span class="pl-k">=</span><span class="pl-c1">I</span>;<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">oc</span>(c,a)};<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">qc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">pc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">J</span>;<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">J</span>;<span class="pl-c1">J</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">AttributeOctahedronTransform</span><span class="pl-k">=</span><span class="pl-c1">J</span>;<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">InitFromAttribute</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">InitFromAttribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">rb</span>(c,a)};<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">quantization_bits</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">quantization_bits</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">tb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">sb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>n;<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span>n;<span class="pl-smi">n</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">PointAttribute</span><span class="pl-k">=</span>n;<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Sc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeTransformData</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeTransformData</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Kc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>),<span class="pl-c1">P</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">attribute_type</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">attribute_type</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Mc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">data_type</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">data_type</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Pc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_components</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">num_components</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Rc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">normalized</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">normalized</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Qc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">byte_stride</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">byte_stride</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Oc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">byte_offset</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">byte_offset</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Nc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">unique_id</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">unique_id</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Tc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Lc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">P</span>;<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">P</span>;<span class="pl-c1">P</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">AttributeTransformData</span><span class="pl-k">=</span><span class="pl-c1">P</span>;<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">transform_type</span><span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">transform_type</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Ab</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">zb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>x;<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span>x;<span class="pl-smi">x</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">AttributeQuantizationTransform</span><span class="pl-k">=</span>x;<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">InitFromAttribute</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">InitFromAttribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">ub</span>(c,a)};<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">quantization_bits</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">quantization_bits</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">xb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">min_value</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">min_value</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">wb</span>(c,a)};<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">range</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">yb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">vb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">K</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">K</span>;<span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">K</span>;<span class="pl-c1">K</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoInt8Array</span><span class="pl-k">=</span><span class="pl-c1">K</span>;<span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">ic</span>(c,a)};<span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">kc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">K</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">jc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>q;<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span>q;<span class="pl-smi">q</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">MetadataQuerier</span><span class="pl-k">=</span>q;<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">HasEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">HasEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Ec</span>(c,a,b)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">HasIntEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">HasIntEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Fc</span>(c,a,b)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetIntEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetIntEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span> <span class="pl-en">Bc</span>(c,a,b)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">HasDoubleEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">HasDoubleEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Dc</span>(c,a,b)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetDoubleEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetDoubleEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span> <span class="pl-en">zc</span>(c,a,b)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">HasStringEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">HasStringEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Gc</span>(c,a,b)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetStringEntry</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetStringEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span> <span class="pl-en">u</span>(<span class="pl-en">Cc</span>(c,a,b))};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">NumEntries</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">NumEntries</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">Hc</span>(c,a)};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetEntryName</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetEntryName</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">u</span>(<span class="pl-en">Ac</span>(c,a,b))};<span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Ic</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">L</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoInt16Array</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">cc</span>(c,a)};<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">ec</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">dc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">M</span>;<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">M</span>;<span class="pl-c1">M</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoFloat32Array</span><span class="pl-k">=</span><span class="pl-c1">M</span>;<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">$b</span>(c,a)};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">bc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-en">ac</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">V</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">V</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">V</span>;<span class="pl-c1">V</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">V</span>;<span class="pl-c1">V</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">GeometryAttribute</span><span class="pl-k">=</span><span class="pl-c1">V</span>;<span class="pl-c1">V</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">V</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">uc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-c1">Q</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DecoderBuffer</span><span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">Init</span><span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">Init</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">alloc</span>(a,ia);<span class="pl-smi">l</span>.<span class="pl-en">copy</span>(a,ia,d);a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">d}b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-en">Bb</span>(c,a,b)};<span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Cb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>g;<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span>g;<span class="pl-smi">g</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">Decoder</span><span class="pl-k">=</span>g;<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetEncodedGeometryType</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetEncodedGeometryType</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">Ub</span>(c,a)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">DecodeBufferToPointCloud</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">DecodeBufferToPointCloud</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Eb</span>(c,a,b),z)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">DecodeBufferToMesh</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">DecodeBufferToMesh</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Db</span>(c,a,b),z)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeId</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeId</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">Kb</span>(c,a,b)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeIdByName</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeIdByName</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);<span class="pl-k">return</span> <span class="pl-en">Jb</span>(c,a,b)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeIdByMetadataEntry</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeIdByMetadataEntry</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;<span class="pl-smi">l</span>.<span class="pl-en">prepare</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(b);d<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span><span class="pl-k">:</span><span class="pl-en">U</span>(d);<span class="pl-k">return</span> <span class="pl-en">Ib</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttribute</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Tb</span>(c,a,b),n)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeByUniqueId</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeByUniqueId</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Fb</span>(c,a,b),n)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetMetadata</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetMetadata</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Wb</span>(c,a),<span class="pl-c1">R</span>)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeMetadata</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeMetadata</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">T</span>(<span class="pl-en">Pb</span>(c,a,b),<span class="pl-c1">R</span>)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetFaceFromMesh</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetFaceFromMesh</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Vb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetTriangleStripsFromMesh</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetTriangleStripsFromMesh</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">Xb</span>(c,a,b)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeFloat</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeFloat</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Hb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeFloatForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeFloatForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Gb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeIntForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeIntForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Ob</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeInt8ForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeInt8ForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Nb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeUInt8ForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeUInt8ForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Sb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeInt16ForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeInt16ForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Lb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeUInt16ForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeUInt16ForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Qb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeInt32ForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeInt32ForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Mb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetAttributeUInt32ForAllPoints</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">GetAttributeUInt32ForAllPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ptr</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-en">Rb</span>(c,a,b,d)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">SkipAttributeTransform</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">SkipAttributeTransform</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-en">Yb</span>(c,a)};<span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Zb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">C</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">C</span>;<span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">C</span>;<span class="pl-c1">C</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">Mesh</span><span class="pl-k">=</span><span class="pl-c1">C</span>;<span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_faces</span><span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">num_faces</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">xc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_attributes</span><span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">num_attributes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">wc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">num_points</span><span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">num_points</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">yc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">vc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">X</span>;<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">X</span>;<span class="pl-c1">X</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">VoidPtr</span><span class="pl-k">=</span><span class="pl-c1">X</span>;<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">ad</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">N</span>;<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">N</span>;<span class="pl-c1">N</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">DracoInt32Array</span><span class="pl-k">=</span><span class="pl-c1">N</span>;<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">GetValue</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ptr</span>);<span class="pl-k">return</span> <span class="pl-en">fc</span>(b,a)};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">hc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">gc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">m</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__class__</span><span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-c1">R</span>.<span class="pl-smi">__cache__</span><span class="pl-k">=</span>{};<span class="pl-smi">a</span>.<span class="pl-smi">Metadata</span><span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">__destroy__</span><span class="pl-k">=</span><span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">__destroy__</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">Jc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ptr</span>)};(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-smi">a</span>.<span class="pl-c1">OK</span><span class="pl-k">=</span><span class="pl-en">rd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">ERROR</span><span class="pl-k">=</span><span class="pl-en">od</span>();<span class="pl-smi">a</span>.<span class="pl-c1">IO_ERROR</span><span class="pl-k">=</span><span class="pl-en">qd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">INVALID_PARAMETER</span><span class="pl-k">=</span><span class="pl-en">pd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">UNSUPPORTED_VERSION</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-en">td</span>();<span class="pl-smi">a</span>.<span class="pl-c1">UNKNOWN_VERSION</span><span class="pl-k">=</span><span class="pl-en">sd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">INVALID_GEOMETRY_TYPE</span><span class="pl-k">=</span><span class="pl-en">fd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">POINT_CLOUD</span><span class="pl-k">=</span><span class="pl-en">gd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">TRIANGULAR_MESH</span><span class="pl-k">=</span><span class="pl-en">hd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">ATTRIBUTE_INVALID_TRANSFORM</span><span class="pl-k">=</span><span class="pl-en">bd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">ATTRIBUTE_NO_TRANSFORM</span><span class="pl-k">=</span><span class="pl-en">cd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">ATTRIBUTE_QUANTIZATION_TRANSFORM</span><span class="pl-k">=</span><span class="pl-en">ed</span>();<span class="pl-smi">a</span>.<span class="pl-c1">ATTRIBUTE_OCTAHEDRON_TRANSFORM</span><span class="pl-k">=</span><span class="pl-en">dd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">INVALID</span><span class="pl-k">=</span><span class="pl-en">kd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">POSITION</span><span class="pl-k">=</span><span class="pl-en">md</span>();<span class="pl-smi">a</span>.<span class="pl-c1">NORMAL</span><span class="pl-k">=</span><span class="pl-en">ld</span>();<span class="pl-smi">a</span>.<span class="pl-c1">COLOR</span><span class="pl-k">=</span><span class="pl-en">id</span>();<span class="pl-smi">a</span>.<span class="pl-c1">TEX_COORD</span><span class="pl-k">=</span><span class="pl-en">nd</span>();<span class="pl-smi">a</span>.<span class="pl-c1">GENERIC</span><span class="pl-k">=</span><span class="pl-en">jd</span>()}<span class="pl-smi">a</span>.<span class="pl-smi">calledRun</span><span class="pl-k">?</span><span class="pl-en">c</span>()<span class="pl-k">:</span><span class="pl-smi">Na</span>.<span class="pl-c1">unshift</span>(c)})();<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">a</span>.<span class="pl-smi">onModuleParsed</span>)<span class="pl-smi">a</span>.<span class="pl-en">onModuleParsed</span>();<span class="pl-k">return</span> d};</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">?</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>DracoDecoderModule<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span><span class="pl-en">define</span>([],<span class="pl-k">function</span>(){<span class="pl-k">return</span> DracoDecoderModule})<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">exports</span>.<span class="pl-smi">DracoDecoderModule</span><span class="pl-k">=</span>DracoDecoderModule);</td>
      </tr>
</table>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1" aria-label="Inline file action toolbar">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM13 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>
    </summary>
    <details-menu>
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2" style="width:185px">
        <li><clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/mrdoob/three.js/blame/02b5ba0b53f8f461e85c9877f5a6c0094bc2bbf3/examples/js/libs/draco/gltf/draco_wasm_wrapper.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/mrdoob/three.js/issues/new">Reference in new issue</a></li>
      </ul>
    </details-menu>
  </details>

  </div>

    </div>

  

  <details class="details-reset details-overlay details-overlay-dark">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
        <button type="submit" class="btn" data-close-dialog>Go</button>
</form>    </details-dialog>
  </details>



  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

        
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2019 <span title="0.39074s from unicorn-756bcb6c6f-mpj9r">GitHub</span>, Inc.</li>
        <li class="mr-3"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3"><a href="/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-lg-4" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
        <li class="mr-3"><a href="https://github.com/pricing" data-ga-click="Footer, go to Pricing, text:Pricing">Pricing</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
        <li class="mr-3"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You can’t perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-A2oODl6J8IUhtoGkXeMCihJmKtlKzvGQ5KCMOaVASnArFAggWf5fWype6hyVg2/nOMHgg8rRpbXIiy1M2SF9xg==" type="application/javascript" src="https://github.githubassets.com/assets/frameworks-d4d313475f64e2607ae2b39afefbcd40.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-jvAadvVbXrKSyoU/QfSGdeOAew9KM+C8PgV1gR3Nbbj6rVR/8yajdzcFxtGwtm94soAlOpEDgo54AAxc1c5t1w==" type="application/javascript" src="https://github.githubassets.com/assets/github-82854bcfd22bea069bfbece6383b05e0.js"></script>
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark" open>
    <summary aria-haspopup="dialog" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

<div id="hovercard-aria-description" class="sr-only">
  Press h to open a hovercard with more details.
</div>

  <div aria-live="polite" class="js-global-screen-reader-notice sr-only"></div>

  </body>
</html>

